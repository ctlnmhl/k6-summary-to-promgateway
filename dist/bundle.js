(()=>{"use strict";var e={d:(t,n)=>{for(var r in n)e.o(n,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:n[r]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};function n(e){console.log("Computing test summary metrics...");const t=e.metrics;let n="";for(let e in t){if(e.includes("{"))continue;let s=t[e].values;n+=`# TYPE ${o=e} gauge\n# HELP ${o} ${i[o.split("{")[0]]}\n`;for(const[t,i]of Object.entries(s))n+=r(e,i,t)}var o;return n}function r(e,t,n){if(void 0!==n)return n.includes("p(")?`${e}{quantile="${n}"} ${t}\n`:`${e}{label="${n}"} ${t}\n`}e.r(t),e.d(t,{convertMetrics:()=>n});let i={vus:"Current number of active virtual users",vus_max:"Max possible number of virtual users",iterations:"The aggregate number of times the VUs in the test have executed",iteration_duration:"The time it took to complete one full iteration",dropped_iterations:"The number of iterations that could not be started",data_received:"The amount of received data",data_sent:"The amount of data sent",checks:"The rate of successful checks",http_reqs:"How many HTTP requests has k6 generated, in total",http_req_blocked:"Time spent blocked  before initiating the request",http_req_connecting:"Time spent establishing TCP connection",http_req_tls_handshaking:"Time spent handshaking TLS session",http_req_sending:"Time spent sending data",http_req_waiting:"Time spent waiting for response",http_req_receiving:"Time spent receiving response data",http_req_duration:"Total time for the request",http_req_failed:"The rate of failed requests"};var o=exports;for(var s in t)o[s]=t[s];t.__esModule&&Object.defineProperty(o,"__esModule",{value:!0})})();
//# sourceMappingURL=bundle.js.map