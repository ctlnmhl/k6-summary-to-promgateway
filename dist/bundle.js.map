{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://k6-summary-to-promgateway/./node_modules/bintrees/index.js","webpack://k6-summary-to-promgateway/./node_modules/bintrees/lib/bintree.js","webpack://k6-summary-to-promgateway/./node_modules/bintrees/lib/rbtree.js","webpack://k6-summary-to-promgateway/./node_modules/bintrees/lib/treebase.js","webpack://k6-summary-to-promgateway/./node_modules/prom-client/index.js","webpack://k6-summary-to-promgateway/./node_modules/prom-client/lib/bucketGenerators.js","webpack://k6-summary-to-promgateway/./node_modules/prom-client/lib/cluster.js","webpack://k6-summary-to-promgateway/./node_modules/prom-client/lib/counter.js","webpack://k6-summary-to-promgateway/./node_modules/prom-client/lib/defaultMetrics.js","webpack://k6-summary-to-promgateway/./node_modules/prom-client/lib/gauge.js","webpack://k6-summary-to-promgateway/./node_modules/prom-client/lib/histogram.js","webpack://k6-summary-to-promgateway/./node_modules/prom-client/lib/metric.js","webpack://k6-summary-to-promgateway/./node_modules/prom-client/lib/metricAggregators.js","webpack://k6-summary-to-promgateway/./node_modules/prom-client/lib/metrics/eventLoopLag.js","webpack://k6-summary-to-promgateway/./node_modules/prom-client/lib/metrics/gc.js","webpack://k6-summary-to-promgateway/./node_modules/prom-client/lib/metrics/heapSizeAndUsed.js","webpack://k6-summary-to-promgateway/./node_modules/prom-client/lib/metrics/heapSpacesSizeAndUsed.js","webpack://k6-summary-to-promgateway/./node_modules/prom-client/lib/metrics/helpers/processMetricsHelpers.js","webpack://k6-summary-to-promgateway/./node_modules/prom-client/lib/metrics/helpers/safeMemoryUsage.js","webpack://k6-summary-to-promgateway/./node_modules/prom-client/lib/metrics/osMemoryHeap.js","webpack://k6-summary-to-promgateway/./node_modules/prom-client/lib/metrics/osMemoryHeapLinux.js","webpack://k6-summary-to-promgateway/./node_modules/prom-client/lib/metrics/processCpuTotal.js","webpack://k6-summary-to-promgateway/./node_modules/prom-client/lib/metrics/processHandles.js","webpack://k6-summary-to-promgateway/./node_modules/prom-client/lib/metrics/processMaxFileDescriptors.js","webpack://k6-summary-to-promgateway/./node_modules/prom-client/lib/metrics/processOpenFileDescriptors.js","webpack://k6-summary-to-promgateway/./node_modules/prom-client/lib/metrics/processRequests.js","webpack://k6-summary-to-promgateway/./node_modules/prom-client/lib/metrics/processStartTime.js","webpack://k6-summary-to-promgateway/./node_modules/prom-client/lib/metrics/version.js","webpack://k6-summary-to-promgateway/./node_modules/prom-client/lib/pushgateway.js","webpack://k6-summary-to-promgateway/./node_modules/prom-client/lib/registry.js","webpack://k6-summary-to-promgateway/./node_modules/prom-client/lib/summary.js","webpack://k6-summary-to-promgateway/./node_modules/prom-client/lib/timeWindowQuantiles.js","webpack://k6-summary-to-promgateway/./node_modules/prom-client/lib/util.js","webpack://k6-summary-to-promgateway/./node_modules/prom-client/lib/validation.js","webpack://k6-summary-to-promgateway/./node_modules/tdigest/tdigest.js","webpack://k6-summary-to-promgateway/./src/send-metrics.js","webpack://k6-summary-to-promgateway/external node-commonjs \"cluster\"","webpack://k6-summary-to-promgateway/external node-commonjs \"fs\"","webpack://k6-summary-to-promgateway/external node-commonjs \"http\"","webpack://k6-summary-to-promgateway/external node-commonjs \"https\"","webpack://k6-summary-to-promgateway/external node-commonjs \"perf_hooks\"","webpack://k6-summary-to-promgateway/external node-commonjs \"process\"","webpack://k6-summary-to-promgateway/external node-commonjs \"url\"","webpack://k6-summary-to-promgateway/external node-commonjs \"util\"","webpack://k6-summary-to-promgateway/external node-commonjs \"v8\"","webpack://k6-summary-to-promgateway/webpack/bootstrap","webpack://k6-summary-to-promgateway/webpack/startup"],"sourcesContent":["module.exports = {\n    RBTree: require('./lib/rbtree'),\n    BinTree: require('./lib/bintree')\n};\n","\nvar TreeBase = require('./treebase');\n\nfunction Node(data) {\n    this.data = data;\n    this.left = null;\n    this.right = null;\n}\n\nNode.prototype.get_child = function(dir) {\n    return dir ? this.right : this.left;\n};\n\nNode.prototype.set_child = function(dir, val) {\n    if(dir) {\n        this.right = val;\n    }\n    else {\n        this.left = val;\n    }\n};\n\nfunction BinTree(comparator) {\n    this._root = null;\n    this._comparator = comparator;\n    this.size = 0;\n}\n\nBinTree.prototype = new TreeBase();\n\n// returns true if inserted, false if duplicate\nBinTree.prototype.insert = function(data) {\n    if(this._root === null) {\n        // empty tree\n        this._root = new Node(data);\n        this.size++;\n        return true;\n    }\n\n    var dir = 0;\n\n    // setup\n    var p = null; // parent\n    var node = this._root;\n\n    // search down\n    while(true) {\n        if(node === null) {\n            // insert new node at the bottom\n            node = new Node(data);\n            p.set_child(dir, node);\n            ret = true;\n            this.size++;\n            return true;\n        }\n\n        // stop if found\n        if(this._comparator(node.data, data) === 0) {\n            return false;\n        }\n\n        dir = this._comparator(node.data, data) < 0;\n\n        // update helpers\n        p = node;\n        node = node.get_child(dir);\n    }\n};\n\n// returns true if removed, false if not found\nBinTree.prototype.remove = function(data) {\n    if(this._root === null) {\n        return false;\n    }\n\n    var head = new Node(undefined); // fake tree root\n    var node = head;\n    node.right = this._root;\n    var p = null; // parent\n    var found = null; // found item\n    var dir = 1;\n\n    while(node.get_child(dir) !== null) {\n        p = node;\n        node = node.get_child(dir);\n        var cmp = this._comparator(data, node.data);\n        dir = cmp > 0;\n\n        if(cmp === 0) {\n            found = node;\n        }\n    }\n\n    if(found !== null) {\n        found.data = node.data;\n        p.set_child(p.right === node, node.get_child(node.left === null));\n\n        this._root = head.right;\n        this.size--;\n        return true;\n    }\n    else {\n        return false;\n    }\n};\n\nmodule.exports = BinTree;\n\n","\nvar TreeBase = require('./treebase');\n\nfunction Node(data) {\n    this.data = data;\n    this.left = null;\n    this.right = null;\n    this.red = true;\n}\n\nNode.prototype.get_child = function(dir) {\n    return dir ? this.right : this.left;\n};\n\nNode.prototype.set_child = function(dir, val) {\n    if(dir) {\n        this.right = val;\n    }\n    else {\n        this.left = val;\n    }\n};\n\nfunction RBTree(comparator) {\n    this._root = null;\n    this._comparator = comparator;\n    this.size = 0;\n}\n\nRBTree.prototype = new TreeBase();\n\n// returns true if inserted, false if duplicate\nRBTree.prototype.insert = function(data) {\n    var ret = false;\n\n    if(this._root === null) {\n        // empty tree\n        this._root = new Node(data);\n        ret = true;\n        this.size++;\n    }\n    else {\n        var head = new Node(undefined); // fake tree root\n\n        var dir = 0;\n        var last = 0;\n\n        // setup\n        var gp = null; // grandparent\n        var ggp = head; // grand-grand-parent\n        var p = null; // parent\n        var node = this._root;\n        ggp.right = this._root;\n\n        // search down\n        while(true) {\n            if(node === null) {\n                // insert new node at the bottom\n                node = new Node(data);\n                p.set_child(dir, node);\n                ret = true;\n                this.size++;\n            }\n            else if(is_red(node.left) && is_red(node.right)) {\n                // color flip\n                node.red = true;\n                node.left.red = false;\n                node.right.red = false;\n            }\n\n            // fix red violation\n            if(is_red(node) && is_red(p)) {\n                var dir2 = ggp.right === gp;\n\n                if(node === p.get_child(last)) {\n                    ggp.set_child(dir2, single_rotate(gp, !last));\n                }\n                else {\n                    ggp.set_child(dir2, double_rotate(gp, !last));\n                }\n            }\n\n            var cmp = this._comparator(node.data, data);\n\n            // stop if found\n            if(cmp === 0) {\n                break;\n            }\n\n            last = dir;\n            dir = cmp < 0;\n\n            // update helpers\n            if(gp !== null) {\n                ggp = gp;\n            }\n            gp = p;\n            p = node;\n            node = node.get_child(dir);\n        }\n\n        // update root\n        this._root = head.right;\n    }\n\n    // make root black\n    this._root.red = false;\n\n    return ret;\n};\n\n// returns true if removed, false if not found\nRBTree.prototype.remove = function(data) {\n    if(this._root === null) {\n        return false;\n    }\n\n    var head = new Node(undefined); // fake tree root\n    var node = head;\n    node.right = this._root;\n    var p = null; // parent\n    var gp = null; // grand parent\n    var found = null; // found item\n    var dir = 1;\n\n    while(node.get_child(dir) !== null) {\n        var last = dir;\n\n        // update helpers\n        gp = p;\n        p = node;\n        node = node.get_child(dir);\n\n        var cmp = this._comparator(data, node.data);\n\n        dir = cmp > 0;\n\n        // save found node\n        if(cmp === 0) {\n            found = node;\n        }\n\n        // push the red node down\n        if(!is_red(node) && !is_red(node.get_child(dir))) {\n            if(is_red(node.get_child(!dir))) {\n                var sr = single_rotate(node, dir);\n                p.set_child(last, sr);\n                p = sr;\n            }\n            else if(!is_red(node.get_child(!dir))) {\n                var sibling = p.get_child(!last);\n                if(sibling !== null) {\n                    if(!is_red(sibling.get_child(!last)) && !is_red(sibling.get_child(last))) {\n                        // color flip\n                        p.red = false;\n                        sibling.red = true;\n                        node.red = true;\n                    }\n                    else {\n                        var dir2 = gp.right === p;\n\n                        if(is_red(sibling.get_child(last))) {\n                            gp.set_child(dir2, double_rotate(p, last));\n                        }\n                        else if(is_red(sibling.get_child(!last))) {\n                            gp.set_child(dir2, single_rotate(p, last));\n                        }\n\n                        // ensure correct coloring\n                        var gpc = gp.get_child(dir2);\n                        gpc.red = true;\n                        node.red = true;\n                        gpc.left.red = false;\n                        gpc.right.red = false;\n                    }\n                }\n            }\n        }\n    }\n\n    // replace and remove if found\n    if(found !== null) {\n        found.data = node.data;\n        p.set_child(p.right === node, node.get_child(node.left === null));\n        this.size--;\n    }\n\n    // update root and make it black\n    this._root = head.right;\n    if(this._root !== null) {\n        this._root.red = false;\n    }\n\n    return found !== null;\n};\n\nfunction is_red(node) {\n    return node !== null && node.red;\n}\n\nfunction single_rotate(root, dir) {\n    var save = root.get_child(!dir);\n\n    root.set_child(!dir, save.get_child(dir));\n    save.set_child(dir, root);\n\n    root.red = true;\n    save.red = false;\n\n    return save;\n}\n\nfunction double_rotate(root, dir) {\n    root.set_child(!dir, single_rotate(root.get_child(!dir), !dir));\n    return single_rotate(root, dir);\n}\n\nmodule.exports = RBTree;\n","\nfunction TreeBase() {}\n\n// removes all nodes from the tree\nTreeBase.prototype.clear = function() {\n    this._root = null;\n    this.size = 0;\n};\n\n// returns node data if found, null otherwise\nTreeBase.prototype.find = function(data) {\n    var res = this._root;\n\n    while(res !== null) {\n        var c = this._comparator(data, res.data);\n        if(c === 0) {\n            return res.data;\n        }\n        else {\n            res = res.get_child(c > 0);\n        }\n    }\n\n    return null;\n};\n\n// returns iterator to node if found, null otherwise\nTreeBase.prototype.findIter = function(data) {\n    var res = this._root;\n    var iter = this.iterator();\n\n    while(res !== null) {\n        var c = this._comparator(data, res.data);\n        if(c === 0) {\n            iter._cursor = res;\n            return iter;\n        }\n        else {\n            iter._ancestors.push(res);\n            res = res.get_child(c > 0);\n        }\n    }\n\n    return null;\n};\n\n// Returns an iterator to the tree node at or immediately after the item\nTreeBase.prototype.lowerBound = function(item) {\n    var cur = this._root;\n    var iter = this.iterator();\n    var cmp = this._comparator;\n\n    while(cur !== null) {\n        var c = cmp(item, cur.data);\n        if(c === 0) {\n            iter._cursor = cur;\n            return iter;\n        }\n        iter._ancestors.push(cur);\n        cur = cur.get_child(c > 0);\n    }\n\n    for(var i=iter._ancestors.length - 1; i >= 0; --i) {\n        cur = iter._ancestors[i];\n        if(cmp(item, cur.data) < 0) {\n            iter._cursor = cur;\n            iter._ancestors.length = i;\n            return iter;\n        }\n    }\n\n    iter._ancestors.length = 0;\n    return iter;\n};\n\n// Returns an iterator to the tree node immediately after the item\nTreeBase.prototype.upperBound = function(item) {\n    var iter = this.lowerBound(item);\n    var cmp = this._comparator;\n\n    while(iter.data() !== null && cmp(iter.data(), item) === 0) {\n        iter.next();\n    }\n\n    return iter;\n};\n\n// returns null if tree is empty\nTreeBase.prototype.min = function() {\n    var res = this._root;\n    if(res === null) {\n        return null;\n    }\n\n    while(res.left !== null) {\n        res = res.left;\n    }\n\n    return res.data;\n};\n\n// returns null if tree is empty\nTreeBase.prototype.max = function() {\n    var res = this._root;\n    if(res === null) {\n        return null;\n    }\n\n    while(res.right !== null) {\n        res = res.right;\n    }\n\n    return res.data;\n};\n\n// returns a null iterator\n// call next() or prev() to point to an element\nTreeBase.prototype.iterator = function() {\n    return new Iterator(this);\n};\n\n// calls cb on each node's data, in order\nTreeBase.prototype.each = function(cb) {\n    var it=this.iterator(), data;\n    while((data = it.next()) !== null) {\n        cb(data);\n    }\n};\n\n// calls cb on each node's data, in reverse order\nTreeBase.prototype.reach = function(cb) {\n    var it=this.iterator(), data;\n    while((data = it.prev()) !== null) {\n        cb(data);\n    }\n};\n\n\nfunction Iterator(tree) {\n    this._tree = tree;\n    this._ancestors = [];\n    this._cursor = null;\n}\n\nIterator.prototype.data = function() {\n    return this._cursor !== null ? this._cursor.data : null;\n};\n\n// if null-iterator, returns first node\n// otherwise, returns next node\nIterator.prototype.next = function() {\n    if(this._cursor === null) {\n        var root = this._tree._root;\n        if(root !== null) {\n            this._minNode(root);\n        }\n    }\n    else {\n        if(this._cursor.right === null) {\n            // no greater node in subtree, go up to parent\n            // if coming from a right child, continue up the stack\n            var save;\n            do {\n                save = this._cursor;\n                if(this._ancestors.length) {\n                    this._cursor = this._ancestors.pop();\n                }\n                else {\n                    this._cursor = null;\n                    break;\n                }\n            } while(this._cursor.right === save);\n        }\n        else {\n            // get the next node from the subtree\n            this._ancestors.push(this._cursor);\n            this._minNode(this._cursor.right);\n        }\n    }\n    return this._cursor !== null ? this._cursor.data : null;\n};\n\n// if null-iterator, returns last node\n// otherwise, returns previous node\nIterator.prototype.prev = function() {\n    if(this._cursor === null) {\n        var root = this._tree._root;\n        if(root !== null) {\n            this._maxNode(root);\n        }\n    }\n    else {\n        if(this._cursor.left === null) {\n            var save;\n            do {\n                save = this._cursor;\n                if(this._ancestors.length) {\n                    this._cursor = this._ancestors.pop();\n                }\n                else {\n                    this._cursor = null;\n                    break;\n                }\n            } while(this._cursor.left === save);\n        }\n        else {\n            this._ancestors.push(this._cursor);\n            this._maxNode(this._cursor.left);\n        }\n    }\n    return this._cursor !== null ? this._cursor.data : null;\n};\n\nIterator.prototype._minNode = function(start) {\n    while(start.left !== null) {\n        this._ancestors.push(start);\n        start = start.left;\n    }\n    this._cursor = start;\n};\n\nIterator.prototype._maxNode = function(start) {\n    while(start.right !== null) {\n        this._ancestors.push(start);\n        start = start.right;\n    }\n    this._cursor = start;\n};\n\nmodule.exports = TreeBase;\n\n","/**\n * Prometheus client\n * @module Prometheus client\n */\n\n'use strict';\n\nexports.register = require('./lib/registry').globalRegistry;\nexports.Registry = require('./lib/registry');\nexports.contentType = require('./lib/registry').globalRegistry.contentType;\nexports.validateMetricName = require('./lib/validation').validateMetricName;\n\nexports.Counter = require('./lib/counter');\nexports.Gauge = require('./lib/gauge');\nexports.Histogram = require('./lib/histogram');\nexports.Summary = require('./lib/summary');\nexports.Pushgateway = require('./lib/pushgateway');\n\nexports.linearBuckets = require('./lib/bucketGenerators').linearBuckets;\nexports.exponentialBuckets = require('./lib/bucketGenerators').exponentialBuckets;\n\nexports.collectDefaultMetrics = require('./lib/defaultMetrics');\n\nexports.aggregators = require('./lib/metricAggregators').aggregators;\nexports.AggregatorRegistry = require('./lib/cluster');\n","'use strict';\n\nexports.linearBuckets = (start, width, count) => {\n\tif (count < 1) {\n\t\tthrow new Error('Linear buckets needs a positive count');\n\t}\n\n\tconst buckets = new Array(count);\n\tfor (let i = 0; i < count; i++) {\n\t\tbuckets[i] = start + i * width;\n\t}\n\treturn buckets;\n};\n\nexports.exponentialBuckets = (start, factor, count) => {\n\tif (start <= 0) {\n\t\tthrow new Error('Exponential buckets needs a positive start');\n\t}\n\tif (count < 1) {\n\t\tthrow new Error('Exponential buckets needs a positive count');\n\t}\n\tif (factor <= 1) {\n\t\tthrow new Error('Exponential buckets needs a factor greater than 1');\n\t}\n\tconst buckets = new Array(count);\n\tfor (let i = 0; i < count; i++) {\n\t\tbuckets[i] = start;\n\t\tstart *= factor;\n\t}\n\treturn buckets;\n};\n","'use strict';\n\n/**\n * Extends the Registry class with a `clusterMetrics` method that returns\n * aggregated metrics for all workers.\n *\n * In cluster workers, listens for and responds to requests for metrics by the\n * cluster master.\n */\n\nconst Registry = require('./registry');\nconst { Grouper } = require('./util');\nconst { aggregators } = require('./metricAggregators');\n// We need to lazy-load the 'cluster' module as some application servers -\n// namely Passenger - crash when it is imported.\nlet cluster = () => {\n\tconst data = require('cluster');\n\tcluster = () => data;\n\treturn data;\n};\n\nconst GET_METRICS_REQ = 'prom-client:getMetricsReq';\nconst GET_METRICS_RES = 'prom-client:getMetricsRes';\n\nlet registries = [Registry.globalRegistry];\nlet requestCtr = 0; // Concurrency control\nlet listenersAdded = false;\nconst requests = new Map(); // Pending requests for workers' local metrics.\n\nclass AggregatorRegistry extends Registry {\n\tconstructor() {\n\t\tsuper();\n\t\taddListeners();\n\t}\n\n\t/**\n\t * Gets aggregated metrics for all workers. The optional callback and\n\t * returned Promise resolve with the same value; either may be used.\n\t * @return {Promise<string>} Promise that resolves with the aggregated\n\t *   metrics.\n\t */\n\tclusterMetrics() {\n\t\tconst requestId = requestCtr++;\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlet settled = false;\n\t\t\tfunction done(err, result) {\n\t\t\t\tif (settled) return;\n\t\t\t\tsettled = true;\n\t\t\t\tif (err) reject(err);\n\t\t\t\telse resolve(result);\n\t\t\t}\n\n\t\t\tconst request = {\n\t\t\t\tresponses: [],\n\t\t\t\tpending: 0,\n\t\t\t\tdone,\n\t\t\t\terrorTimeout: setTimeout(() => {\n\t\t\t\t\tconst err = new Error('Operation timed out.');\n\t\t\t\t\trequest.done(err);\n\t\t\t\t}, 5000),\n\t\t\t};\n\t\t\trequests.set(requestId, request);\n\n\t\t\tconst message = {\n\t\t\t\ttype: GET_METRICS_REQ,\n\t\t\t\trequestId,\n\t\t\t};\n\n\t\t\tfor (const id in cluster().workers) {\n\t\t\t\t// If the worker exits abruptly, it may still be in the workers\n\t\t\t\t// list but not able to communicate.\n\t\t\t\tif (cluster().workers[id].isConnected()) {\n\t\t\t\t\tcluster().workers[id].send(message);\n\t\t\t\t\trequest.pending++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (request.pending === 0) {\n\t\t\t\t// No workers were up\n\t\t\t\tclearTimeout(request.errorTimeout);\n\t\t\t\tprocess.nextTick(() => done(null, ''));\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Creates a new Registry instance from an array of metrics that were\n\t * created by `registry.getMetricsAsJSON()`. Metrics are aggregated using\n\t * the method specified by their `aggregator` property, or by summation if\n\t * `aggregator` is undefined.\n\t * @param {Array} metricsArr Array of metrics, each of which created by\n\t *   `registry.getMetricsAsJSON()`.\n\t * @return {Registry} aggregated registry.\n\t */\n\tstatic aggregate(metricsArr) {\n\t\tconst aggregatedRegistry = new Registry();\n\t\tconst metricsByName = new Grouper();\n\n\t\t// Gather by name\n\t\tmetricsArr.forEach(metrics => {\n\t\t\tmetrics.forEach(metric => {\n\t\t\t\tmetricsByName.add(metric.name, metric);\n\t\t\t});\n\t\t});\n\n\t\t// Aggregate gathered metrics.\n\t\tmetricsByName.forEach(metrics => {\n\t\t\tconst aggregatorName = metrics[0].aggregator;\n\t\t\tconst aggregatorFn = aggregators[aggregatorName];\n\t\t\tif (typeof aggregatorFn !== 'function') {\n\t\t\t\tthrow new Error(`'${aggregatorName}' is not a defined aggregator.`);\n\t\t\t}\n\t\t\tconst aggregatedMetric = aggregatorFn(metrics);\n\t\t\t// NB: The 'omit' aggregator returns undefined.\n\t\t\tif (aggregatedMetric) {\n\t\t\t\tconst aggregatedMetricWrapper = Object.assign(\n\t\t\t\t\t{\n\t\t\t\t\t\tget: () => aggregatedMetric,\n\t\t\t\t\t},\n\t\t\t\t\taggregatedMetric,\n\t\t\t\t);\n\t\t\t\taggregatedRegistry.registerMetric(aggregatedMetricWrapper);\n\t\t\t}\n\t\t});\n\n\t\treturn aggregatedRegistry;\n\t}\n\n\t/**\n\t * Sets the registry or registries to be aggregated. Call from workers to\n\t * use a registry/registries other than the default global registry.\n\t * @param {Array<Registry>|Registry} regs Registry or registries to be\n\t *   aggregated.\n\t * @return {void}\n\t */\n\tstatic setRegistries(regs) {\n\t\tif (!Array.isArray(regs)) regs = [regs];\n\t\tregs.forEach(reg => {\n\t\t\tif (!(reg instanceof Registry)) {\n\t\t\t\tthrow new TypeError(`Expected Registry, got ${typeof reg}`);\n\t\t\t}\n\t\t});\n\t\tregistries = regs;\n\t}\n}\n\n/**\n * Adds event listeners for cluster aggregation. Idempotent (safe to call more\n * than once).\n * @return {void}\n */\nfunction addListeners() {\n\tif (listenersAdded) return;\n\tlistenersAdded = true;\n\n\tif (cluster().isMaster) {\n\t\t// Listen for worker responses to requests for local metrics\n\t\tcluster().on('message', (worker, message) => {\n\t\t\tif (message.type === GET_METRICS_RES) {\n\t\t\t\tconst request = requests.get(message.requestId);\n\n\t\t\t\tif (message.error) {\n\t\t\t\t\trequest.done(new Error(message.error));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tmessage.metrics.forEach(registry => request.responses.push(registry));\n\t\t\t\trequest.pending--;\n\n\t\t\t\tif (request.pending === 0) {\n\t\t\t\t\t// finalize\n\t\t\t\t\trequests.delete(message.requestId);\n\t\t\t\t\tclearTimeout(request.errorTimeout);\n\n\t\t\t\t\tconst registry = AggregatorRegistry.aggregate(request.responses);\n\t\t\t\t\tconst promString = registry.metrics();\n\t\t\t\t\trequest.done(null, promString);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tif (cluster().isWorker) {\n\t\t// Respond to master's requests for worker's local metrics.\n\t\tprocess.on('message', message => {\n\t\t\tif (message.type === GET_METRICS_REQ) {\n\t\t\t\tPromise.all(registries.map(r => r.getMetricsAsJSON()))\n\t\t\t\t\t.then(metrics => {\n\t\t\t\t\t\tprocess.send({\n\t\t\t\t\t\t\ttype: GET_METRICS_RES,\n\t\t\t\t\t\t\trequestId: message.requestId,\n\t\t\t\t\t\t\tmetrics,\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t\t.catch(error => {\n\t\t\t\t\t\tprocess.send({\n\t\t\t\t\t\t\ttype: GET_METRICS_RES,\n\t\t\t\t\t\t\trequestId: message.requestId,\n\t\t\t\t\t\t\terror: error.message,\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n}\n\nmodule.exports = AggregatorRegistry;\n","/**\n * Counter metric\n */\n'use strict';\n\nconst util = require('util');\nconst type = 'counter';\nconst { hashObject, isObject, getLabels, removeLabels } = require('./util');\nconst { validateLabel } = require('./validation');\nconst { Metric } = require('./metric');\n\nclass Counter extends Metric {\n\t/**\n\t * Increment counter\n\t * @param {object} labels - What label you want to be incremented\n\t * @param {Number} value - Value to increment, if omitted increment with 1\n\t * @returns {void}\n\t */\n\tinc(labels, value) {\n\t\tlet hash;\n\t\tif (isObject(labels)) {\n\t\t\thash = hashObject(labels);\n\t\t\tvalidateLabel(this.labelNames, labels);\n\t\t} else {\n\t\t\tvalue = labels;\n\t\t\tlabels = {};\n\t\t}\n\n\t\tif (value && !Number.isFinite(value)) {\n\t\t\tthrow new TypeError(`Value is not a valid number: ${util.format(value)}`);\n\t\t}\n\t\tif (value < 0) {\n\t\t\tthrow new Error('It is not possible to decrease a counter');\n\t\t}\n\n\t\tif (value === null || value === undefined) value = 1;\n\n\t\tsetValue(this.hashMap, value, labels, hash);\n\t}\n\n\t/**\n\t * Reset counter\n\t * @returns {void}\n\t */\n\treset() {\n\t\tthis.hashMap = {};\n\t\tif (this.labelNames.length === 0) {\n\t\t\tsetValue(this.hashMap, 0);\n\t\t}\n\t}\n\n\tasync get() {\n\t\tif (this.collect) {\n\t\t\tconst v = this.collect();\n\t\t\tif (v instanceof Promise) await v;\n\t\t}\n\t\treturn {\n\t\t\thelp: this.help,\n\t\t\tname: this.name,\n\t\t\ttype,\n\t\t\tvalues: Object.values(this.hashMap),\n\t\t\taggregator: this.aggregator,\n\t\t};\n\t}\n\n\tlabels(...args) {\n\t\tconst labels = getLabels(this.labelNames, args) || {};\n\t\treturn {\n\t\t\tinc: this.inc.bind(this, labels),\n\t\t};\n\t}\n\n\tremove(...args) {\n\t\tconst labels = getLabels(this.labelNames, args) || {};\n\t\tvalidateLabel(this.labelNames, labels);\n\t\treturn removeLabels.call(this, this.hashMap, labels);\n\t}\n}\n\nfunction setValue(hashMap, value, labels = {}, hash = '') {\n\tif (hashMap[hash]) {\n\t\thashMap[hash].value += value;\n\t} else {\n\t\thashMap[hash] = { value, labels };\n\t}\n\treturn hashMap;\n}\n\nmodule.exports = Counter;\n","'use strict';\n\nconst { isObject } = require('./util');\n\n// Default metrics.\nconst processCpuTotal = require('./metrics/processCpuTotal');\nconst processStartTime = require('./metrics/processStartTime');\nconst osMemoryHeap = require('./metrics/osMemoryHeap');\nconst processOpenFileDescriptors = require('./metrics/processOpenFileDescriptors');\nconst processMaxFileDescriptors = require('./metrics/processMaxFileDescriptors');\nconst eventLoopLag = require('./metrics/eventLoopLag');\nconst processHandles = require('./metrics/processHandles');\nconst processRequests = require('./metrics/processRequests');\nconst heapSizeAndUsed = require('./metrics/heapSizeAndUsed');\nconst heapSpacesSizeAndUsed = require('./metrics/heapSpacesSizeAndUsed');\nconst version = require('./metrics/version');\nconst gc = require('./metrics/gc');\n\nconst metrics = {\n\tprocessCpuTotal,\n\tprocessStartTime,\n\tosMemoryHeap,\n\tprocessOpenFileDescriptors,\n\tprocessMaxFileDescriptors,\n\teventLoopLag,\n\tprocessHandles,\n\tprocessRequests,\n\theapSizeAndUsed,\n\theapSpacesSizeAndUsed,\n\tversion,\n\tgc,\n};\nconst metricsList = Object.keys(metrics);\n\nmodule.exports = function collectDefaultMetrics(config) {\n\tif (config !== null && config !== undefined && !isObject(config)) {\n\t\tthrow new TypeError('config must be null, undefined, or an object');\n\t}\n\n\tconfig = { eventLoopMonitoringPrecision: 10, ...config };\n\n\tfor (const metric of Object.values(metrics)) {\n\t\tmetric(config.register, config);\n\t}\n};\n\nmodule.exports.metricsList = metricsList;\n","/**\n * Gauge metric\n */\n'use strict';\n\nconst util = require('util');\nconst type = 'gauge';\n\nconst {\n\tsetValue,\n\tgetLabels,\n\thashObject,\n\tisObject,\n\tremoveLabels,\n} = require('./util');\nconst { validateLabel } = require('./validation');\nconst { Metric } = require('./metric');\n\nclass Gauge extends Metric {\n\t/**\n\t * Set a gauge to a value\n\t * @param {object} labels - Object with labels and their values\n\t * @param {Number} value - Value to set the gauge to, must be positive\n\t * @returns {void}\n\t */\n\tset(labels, value) {\n\t\tvalue = getValueArg(labels, value);\n\t\tlabels = getLabelArg(labels);\n\t\tset(this, labels, value);\n\t}\n\n\t/**\n\t * Reset gauge\n\t * @returns {void}\n\t */\n\treset() {\n\t\tthis.hashMap = {};\n\t\tif (this.labelNames.length === 0) {\n\t\t\tsetValue(this.hashMap, 0, {});\n\t\t}\n\t}\n\n\t/**\n\t * Increment a gauge value\n\t * @param {object} labels - Object with labels where key is the label key and value is label value. Can only be one level deep\n\t * @param {Number} value - Value to increment - if omitted, increment with 1\n\t * @returns {void}\n\t */\n\tinc(labels, value) {\n\t\tvalue = getValueArg(labels, value);\n\t\tlabels = getLabelArg(labels);\n\t\tif (value === undefined) value = 1;\n\t\tset(this, labels, this._getValue(labels) + value);\n\t}\n\n\t/**\n\t * Decrement a gauge value\n\t * @param {object} labels - Object with labels where key is the label key and value is label value. Can only be one level deep\n\t * @param {Number} value - Value to decrement - if omitted, decrement with 1\n\t * @returns {void}\n\t */\n\tdec(labels, value) {\n\t\tvalue = getValueArg(labels, value);\n\t\tlabels = getLabelArg(labels);\n\t\tif (value === undefined) value = 1;\n\t\tset(this, labels, this._getValue(labels) - value);\n\t}\n\n\t/**\n\t * Set the gauge to current unix epoch\n\t * @param {object} labels - Object with labels where key is the label key and value is label value. Can only be one level deep\n\t * @returns {void}\n\t */\n\tsetToCurrentTime(labels) {\n\t\tconst now = Date.now() / 1000;\n\t\tif (labels === undefined) {\n\t\t\tthis.set(now);\n\t\t} else {\n\t\t\tthis.set(labels, now);\n\t\t}\n\t}\n\n\t/**\n\t * Start a timer\n\t * @param {object} labels - Object with labels where key is the label key and value is label value. Can only be one level deep\n\t * @returns {function} - Invoke this function to set the duration in seconds since you started the timer.\n\t * @example\n\t * var done = gauge.startTimer();\n\t * makeXHRRequest(function(err, response) {\n\t *\tdone(); //Duration of the request will be saved\n\t * });\n\t */\n\tstartTimer(labels) {\n\t\tconst start = process.hrtime();\n\t\treturn endLabels => {\n\t\t\tconst delta = process.hrtime(start);\n\t\t\tthis.set(Object.assign({}, labels, endLabels), delta[0] + delta[1] / 1e9);\n\t\t};\n\t}\n\n\tasync get() {\n\t\tif (this.collect) {\n\t\t\tconst v = this.collect();\n\t\t\tif (v instanceof Promise) await v;\n\t\t}\n\t\treturn {\n\t\t\thelp: this.help,\n\t\t\tname: this.name,\n\t\t\ttype,\n\t\t\tvalues: Object.values(this.hashMap),\n\t\t\taggregator: this.aggregator,\n\t\t};\n\t}\n\n\t_getValue(labels) {\n\t\tconst hash = hashObject(labels || {});\n\t\treturn this.hashMap[hash] ? this.hashMap[hash].value : 0;\n\t}\n\n\tlabels(...args) {\n\t\tconst labels = getLabels(this.labelNames, args);\n\t\tvalidateLabel(this.labelNames, labels);\n\t\treturn {\n\t\t\tinc: this.inc.bind(this, labels),\n\t\t\tdec: this.dec.bind(this, labels),\n\t\t\tset: this.set.bind(this, labels),\n\t\t\tsetToCurrentTime: this.setToCurrentTime.bind(this, labels),\n\t\t\tstartTimer: this.startTimer.bind(this, labels),\n\t\t};\n\t}\n\n\tremove(...args) {\n\t\tconst labels = getLabels(this.labelNames, args);\n\t\tvalidateLabel(this.labelNames, labels);\n\t\tremoveLabels.call(this, this.hashMap, labels);\n\t}\n}\n\nfunction set(gauge, labels, value) {\n\tif (typeof value !== 'number') {\n\t\tthrow new TypeError(`Value is not a valid number: ${util.format(value)}`);\n\t}\n\n\tvalidateLabel(gauge.labelNames, labels);\n\tsetValue(gauge.hashMap, value, labels);\n}\n\nfunction getLabelArg(labels) {\n\treturn isObject(labels) ? labels : {};\n}\n\nfunction getValueArg(labels, value) {\n\treturn isObject(labels) ? value : labels;\n}\n\nmodule.exports = Gauge;\n","/**\n * Histogram\n */\n'use strict';\n\nconst util = require('util');\nconst type = 'histogram';\nconst { getLabels, hashObject, isObject, removeLabels } = require('./util');\nconst { validateLabel } = require('./validation');\nconst { Metric } = require('./metric');\n\nclass Histogram extends Metric {\n\tconstructor(config) {\n\t\tsuper(config, {\n\t\t\tbuckets: [0.005, 0.01, 0.025, 0.05, 0.1, 0.25, 0.5, 1, 2.5, 5, 10],\n\t\t});\n\n\t\tfor (const label of this.labelNames) {\n\t\t\tif (label === 'le') {\n\t\t\t\tthrow new Error('le is a reserved label keyword');\n\t\t\t}\n\t\t}\n\n\t\tthis.upperBounds = this.buckets;\n\t\tthis.bucketValues = this.upperBounds.reduce((acc, upperBound) => {\n\t\t\tacc[upperBound] = 0;\n\t\t\treturn acc;\n\t\t}, {});\n\n\t\tObject.freeze(this.bucketValues);\n\t\tObject.freeze(this.upperBounds);\n\n\t\tif (this.labelNames.length === 0) {\n\t\t\tthis.hashMap = {\n\t\t\t\t[hashObject({})]: createBaseValues(\n\t\t\t\t\t{},\n\t\t\t\t\tObject.assign({}, this.bucketValues),\n\t\t\t\t),\n\t\t\t};\n\t\t}\n\t}\n\n\t/**\n\t * Observe a value in histogram\n\t * @param {object} labels - Object with labels where key is the label key and value is label value. Can only be one level deep\n\t * @param {Number} value - Value to observe in the histogram\n\t * @returns {void}\n\t */\n\tobserve(labels, value) {\n\t\tobserve.call(this, labels === 0 ? 0 : labels || {})(value);\n\t}\n\n\tasync get() {\n\t\tif (this.collect) {\n\t\t\tconst v = this.collect();\n\t\t\tif (v instanceof Promise) await v;\n\t\t}\n\t\tconst data = Object.values(this.hashMap);\n\t\tconst values = data\n\t\t\t.map(extractBucketValuesForExport(this))\n\t\t\t.reduce(addSumAndCountForExport(this), []);\n\n\t\treturn {\n\t\t\tname: this.name,\n\t\t\thelp: this.help,\n\t\t\ttype,\n\t\t\tvalues,\n\t\t\taggregator: this.aggregator,\n\t\t};\n\t}\n\n\treset() {\n\t\tthis.hashMap = {};\n\t}\n\n\t/**\n\t * Initialize the metrics for the given combination of labels to zero\n\t * @param {object} labels - Object with labels where key is the label key and value is label value. Can only be one level deep\n\t * @returns {void}\n\t */\n\tzero(labels) {\n\t\tconst hash = hashObject(labels);\n\t\tthis.hashMap[hash] = createBaseValues(\n\t\t\tlabels,\n\t\t\tObject.assign({}, this.bucketValues),\n\t\t);\n\t}\n\n\t/**\n\t * Start a timer that could be used to logging durations\n\t * @param {object} labels - Object with labels where key is the label key and value is label value. Can only be one level deep\n\t * @returns {function} - Function to invoke when you want to stop the timer and observe the duration in seconds\n\t * @example\n\t * var end = histogram.startTimer();\n\t * makeExpensiveXHRRequest(function(err, res) {\n\t * \tconst duration = end(); //Observe the duration of expensiveXHRRequest and returns duration in seconds\n\t * \tconsole.log('Duration', duration);\n\t * });\n\t */\n\tstartTimer(labels) {\n\t\treturn startTimer.call(this, labels)();\n\t}\n\n\tlabels(...args) {\n\t\tconst labels = getLabels(this.labelNames, args);\n\t\tvalidateLabel(this.labelNames, labels);\n\t\treturn {\n\t\t\tobserve: observe.call(this, labels),\n\t\t\tstartTimer: startTimer.call(this, labels),\n\t\t};\n\t}\n\n\tremove(...args) {\n\t\tconst labels = getLabels(this.labelNames, args);\n\t\tvalidateLabel(this.labelNames, labels);\n\t\tremoveLabels.call(this, this.hashMap, labels);\n\t}\n}\n\nfunction startTimer(startLabels) {\n\treturn () => {\n\t\tconst start = process.hrtime();\n\t\treturn endLabels => {\n\t\t\tconst delta = process.hrtime(start);\n\t\t\tconst value = delta[0] + delta[1] / 1e9;\n\t\t\tthis.observe(Object.assign({}, startLabels, endLabels), value);\n\t\t\treturn value;\n\t\t};\n\t};\n}\n\nfunction setValuePair(labels, value, metricName) {\n\treturn {\n\t\tlabels,\n\t\tvalue,\n\t\tmetricName,\n\t};\n}\n\nfunction findBound(upperBounds, value) {\n\tfor (let i = 0; i < upperBounds.length; i++) {\n\t\tconst bound = upperBounds[i];\n\t\tif (value <= bound) {\n\t\t\treturn bound;\n\t\t}\n\t}\n\treturn -1;\n}\n\nfunction observe(labels) {\n\treturn value => {\n\t\tconst labelValuePair = convertLabelsAndValues(labels, value);\n\n\t\tvalidateLabel(this.labelNames, labelValuePair.labels);\n\t\tif (!Number.isFinite(labelValuePair.value)) {\n\t\t\tthrow new TypeError(\n\t\t\t\t`Value is not a valid number: ${util.format(labelValuePair.value)}`,\n\t\t\t);\n\t\t}\n\n\t\tconst hash = hashObject(labelValuePair.labels);\n\t\tlet valueFromMap = this.hashMap[hash];\n\t\tif (!valueFromMap) {\n\t\t\tvalueFromMap = createBaseValues(\n\t\t\t\tlabelValuePair.labels,\n\t\t\t\tObject.assign({}, this.bucketValues),\n\t\t\t);\n\t\t}\n\n\t\tconst b = findBound(this.upperBounds, labelValuePair.value);\n\n\t\tvalueFromMap.sum += labelValuePair.value;\n\t\tvalueFromMap.count += 1;\n\n\t\tif (Object.prototype.hasOwnProperty.call(valueFromMap.bucketValues, b)) {\n\t\t\tvalueFromMap.bucketValues[b] += 1;\n\t\t}\n\n\t\tthis.hashMap[hash] = valueFromMap;\n\t};\n}\n\nfunction createBaseValues(labels, bucketValues) {\n\treturn {\n\t\tlabels,\n\t\tbucketValues,\n\t\tsum: 0,\n\t\tcount: 0,\n\t};\n}\n\nfunction convertLabelsAndValues(labels, value) {\n\tif (!isObject(labels)) {\n\t\treturn {\n\t\t\tvalue: labels,\n\t\t\tlabels: {},\n\t\t};\n\t}\n\treturn {\n\t\tlabels,\n\t\tvalue,\n\t};\n}\n\nfunction extractBucketValuesForExport(histogram) {\n\treturn bucketData => {\n\t\tconst buckets = [];\n\t\tconst bucketLabelNames = Object.keys(bucketData.labels);\n\t\tlet acc = 0;\n\t\tfor (const upperBound of histogram.upperBounds) {\n\t\t\tacc += bucketData.bucketValues[upperBound];\n\t\t\tconst lbls = { le: upperBound };\n\t\t\tfor (const labelName of bucketLabelNames) {\n\t\t\t\tlbls[labelName] = bucketData.labels[labelName];\n\t\t\t}\n\t\t\tbuckets.push(setValuePair(lbls, acc, `${histogram.name}_bucket`));\n\t\t}\n\t\treturn { buckets, data: bucketData };\n\t};\n}\n\nfunction addSumAndCountForExport(histogram) {\n\treturn (acc, d) => {\n\t\tacc.push(...d.buckets);\n\n\t\tconst infLabel = { le: '+Inf' };\n\t\tfor (const label of Object.keys(d.data.labels)) {\n\t\t\tinfLabel[label] = d.data.labels[label];\n\t\t}\n\t\tacc.push(\n\t\t\tsetValuePair(infLabel, d.data.count, `${histogram.name}_bucket`),\n\t\t\tsetValuePair(d.data.labels, d.data.sum, `${histogram.name}_sum`),\n\t\t\tsetValuePair(d.data.labels, d.data.count, `${histogram.name}_count`),\n\t\t);\n\t\treturn acc;\n\t};\n}\n\nmodule.exports = Histogram;\n","'use strict';\n\nconst { globalRegistry } = require('./registry');\nconst { isObject } = require('./util');\nconst { validateMetricName, validateLabelName } = require('./validation');\n\n/**\n * @abstract\n */\nclass Metric {\n\tconstructor(config, defaults = {}) {\n\t\tif (!isObject(config)) {\n\t\t\tthrow new TypeError('constructor expected a config object');\n\t\t}\n\t\tObject.assign(\n\t\t\tthis,\n\t\t\t{\n\t\t\t\tlabelNames: [],\n\t\t\t\tregisters: [globalRegistry],\n\t\t\t\taggregator: 'sum',\n\t\t\t},\n\t\t\tdefaults,\n\t\t\tconfig,\n\t\t);\n\t\tif (!this.registers) {\n\t\t\t// in case config.registers is `undefined`\n\t\t\tthis.registers = [globalRegistry];\n\t\t}\n\t\tif (!this.help) {\n\t\t\tthrow new Error('Missing mandatory help parameter');\n\t\t}\n\t\tif (!this.name) {\n\t\t\tthrow new Error('Missing mandatory name parameter');\n\t\t}\n\t\tif (!validateMetricName(this.name)) {\n\t\t\tthrow new Error('Invalid metric name');\n\t\t}\n\t\tif (!validateLabelName(this.labelNames)) {\n\t\t\tthrow new Error('Invalid label name');\n\t\t}\n\t\tif (this.collect && typeof this.collect !== 'function') {\n\t\t\tthrow new Error('Optional \"collect\" parameter must be a function');\n\t\t}\n\n\t\tthis.reset();\n\n\t\tfor (const register of this.registers) {\n\t\t\tregister.registerMetric(this);\n\t\t}\n\t}\n\n\treset() {\n\t\t/* abstract */\n\t}\n}\n\nmodule.exports = { Metric };\n","'use strict';\n\nconst { Grouper, hashObject } = require('./util');\n\n/**\n * Returns a new function that applies the `aggregatorFn` to the values.\n * @param {Function} aggregatorFn function to apply to values.\n * @return {Function} aggregator function\n */\nfunction AggregatorFactory(aggregatorFn) {\n\treturn metrics => {\n\t\tif (metrics.length === 0) return;\n\t\tconst result = {\n\t\t\thelp: metrics[0].help,\n\t\t\tname: metrics[0].name,\n\t\t\ttype: metrics[0].type,\n\t\t\tvalues: [],\n\t\t\taggregator: metrics[0].aggregator,\n\t\t};\n\t\t// Gather metrics by metricName and labels.\n\t\tconst byLabels = new Grouper();\n\t\tmetrics.forEach(metric => {\n\t\t\tmetric.values.forEach(value => {\n\t\t\t\tconst key = hashObject(value.labels);\n\t\t\t\tbyLabels.add(`${value.metricName}_${key}`, value);\n\t\t\t});\n\t\t});\n\t\t// Apply aggregator function to gathered metrics.\n\t\tbyLabels.forEach(values => {\n\t\t\tif (values.length === 0) return;\n\t\t\tconst valObj = {\n\t\t\t\tvalue: aggregatorFn(values),\n\t\t\t\tlabels: values[0].labels,\n\t\t\t};\n\t\t\tif (values[0].metricName) {\n\t\t\t\tvalObj.metricName = values[0].metricName;\n\t\t\t}\n\t\t\t// NB: Timestamps are omitted.\n\t\t\tresult.values.push(valObj);\n\t\t});\n\t\treturn result;\n\t};\n}\n// Export for users to define their own aggregation methods.\nexports.AggregatorFactory = AggregatorFactory;\n\n/**\n * Functions that can be used to aggregate metrics from multiple registries.\n */\nexports.aggregators = {\n\t/**\n\t * @return The sum of values.\n\t */\n\tsum: AggregatorFactory(v => v.reduce((p, c) => p + c.value, 0)),\n\t/**\n\t * @return The first value.\n\t */\n\tfirst: AggregatorFactory(v => v[0].value),\n\t/**\n\t * @return {undefined} Undefined; omits the metric.\n\t */\n\tomit: () => {},\n\t/**\n\t * @return The arithmetic mean of the values.\n\t */\n\taverage: AggregatorFactory(\n\t\tv => v.reduce((p, c) => p + c.value, 0) / v.length,\n\t),\n\t/**\n\t * @return The minimum of the values.\n\t */\n\tmin: AggregatorFactory(v =>\n\t\tv.reduce((p, c) => Math.min(p, c.value), Infinity),\n\t),\n\t/**\n\t * @return The maximum of the values.\n\t */\n\tmax: AggregatorFactory(v =>\n\t\tv.reduce((p, c) => Math.max(p, c.value), -Infinity),\n\t),\n};\n","'use strict';\n\nconst Gauge = require('../gauge');\n\n// Check if perf_hooks module is available\nlet perf_hooks;\ntry {\n\t/* eslint-disable node/no-unsupported-features/node-builtins */\n\tperf_hooks = require('perf_hooks');\n} catch {\n\t// node version is too old\n}\n\n// Reported always.\nconst NODEJS_EVENTLOOP_LAG = 'nodejs_eventloop_lag_seconds';\n\n// Reported only when perf_hooks is available.\nconst NODEJS_EVENTLOOP_LAG_MIN = 'nodejs_eventloop_lag_min_seconds';\nconst NODEJS_EVENTLOOP_LAG_MAX = 'nodejs_eventloop_lag_max_seconds';\nconst NODEJS_EVENTLOOP_LAG_MEAN = 'nodejs_eventloop_lag_mean_seconds';\nconst NODEJS_EVENTLOOP_LAG_STDDEV = 'nodejs_eventloop_lag_stddev_seconds';\nconst NODEJS_EVENTLOOP_LAG_P50 = 'nodejs_eventloop_lag_p50_seconds';\nconst NODEJS_EVENTLOOP_LAG_P90 = 'nodejs_eventloop_lag_p90_seconds';\nconst NODEJS_EVENTLOOP_LAG_P99 = 'nodejs_eventloop_lag_p99_seconds';\n\nfunction reportEventloopLag(start, gauge, labels) {\n\tconst delta = process.hrtime(start);\n\tconst nanosec = delta[0] * 1e9 + delta[1];\n\tconst seconds = nanosec / 1e9;\n\n\tgauge.set(labels, seconds);\n}\n\nmodule.exports = (registry, config = {}) => {\n\tconst namePrefix = config.prefix ? config.prefix : '';\n\tconst labels = config.labels ? config.labels : {};\n\tconst labelNames = Object.keys(labels);\n\tconst registers = registry ? [registry] : undefined;\n\n\tlet collect;\n\tif (!perf_hooks || !perf_hooks.monitorEventLoopDelay) {\n\t\tcollect = () => {\n\t\t\tconst start = process.hrtime();\n\t\t\tsetImmediate(reportEventloopLag, start, lag, labels);\n\t\t};\n\t} else {\n\t\tconst histogram = perf_hooks.monitorEventLoopDelay({\n\t\t\tresolution: config.eventLoopMonitoringPrecision,\n\t\t});\n\t\thistogram.enable();\n\n\t\tcollect = () => {\n\t\t\tconst start = process.hrtime();\n\t\t\tsetImmediate(reportEventloopLag, start, lag, labels);\n\n\t\t\tlagMin.set(labels, histogram.min / 1e9);\n\t\t\tlagMax.set(labels, histogram.max / 1e9);\n\t\t\tlagMean.set(labels, histogram.mean / 1e9);\n\t\t\tlagStddev.set(labels, histogram.stddev / 1e9);\n\t\t\tlagP50.set(labels, histogram.percentile(50) / 1e9);\n\t\t\tlagP90.set(labels, histogram.percentile(90) / 1e9);\n\t\t\tlagP99.set(labels, histogram.percentile(99) / 1e9);\n\n\t\t\thistogram.reset();\n\t\t};\n\t}\n\n\tconst lag = new Gauge({\n\t\tname: namePrefix + NODEJS_EVENTLOOP_LAG,\n\t\thelp: 'Lag of event loop in seconds.',\n\t\tregisters,\n\t\tlabelNames,\n\t\taggregator: 'average',\n\t\t// Use this one metric's `collect` to set all metrics' values.\n\t\tcollect,\n\t});\n\tconst lagMin = new Gauge({\n\t\tname: namePrefix + NODEJS_EVENTLOOP_LAG_MIN,\n\t\thelp: 'The minimum recorded event loop delay.',\n\t\tregisters,\n\t\tlabelNames,\n\t\taggregator: 'min',\n\t});\n\tconst lagMax = new Gauge({\n\t\tname: namePrefix + NODEJS_EVENTLOOP_LAG_MAX,\n\t\thelp: 'The maximum recorded event loop delay.',\n\t\tregisters,\n\t\tlabelNames,\n\t\taggregator: 'max',\n\t});\n\tconst lagMean = new Gauge({\n\t\tname: namePrefix + NODEJS_EVENTLOOP_LAG_MEAN,\n\t\thelp: 'The mean of the recorded event loop delays.',\n\t\tregisters,\n\t\tlabelNames,\n\t\taggregator: 'average',\n\t});\n\tconst lagStddev = new Gauge({\n\t\tname: namePrefix + NODEJS_EVENTLOOP_LAG_STDDEV,\n\t\thelp: 'The standard deviation of the recorded event loop delays.',\n\t\tregisters,\n\t\tlabelNames,\n\t\taggregator: 'average',\n\t});\n\tconst lagP50 = new Gauge({\n\t\tname: namePrefix + NODEJS_EVENTLOOP_LAG_P50,\n\t\thelp: 'The 50th percentile of the recorded event loop delays.',\n\t\tregisters,\n\t\tlabelNames,\n\t\taggregator: 'average',\n\t});\n\tconst lagP90 = new Gauge({\n\t\tname: namePrefix + NODEJS_EVENTLOOP_LAG_P90,\n\t\thelp: 'The 90th percentile of the recorded event loop delays.',\n\t\tregisters,\n\t\tlabelNames,\n\t\taggregator: 'average',\n\t});\n\tconst lagP99 = new Gauge({\n\t\tname: namePrefix + NODEJS_EVENTLOOP_LAG_P99,\n\t\thelp: 'The 99th percentile of the recorded event loop delays.',\n\t\tregisters,\n\t\tlabelNames,\n\t\taggregator: 'average',\n\t});\n};\n\nmodule.exports.metricNames = [\n\tNODEJS_EVENTLOOP_LAG,\n\tNODEJS_EVENTLOOP_LAG_MIN,\n\tNODEJS_EVENTLOOP_LAG_MAX,\n\tNODEJS_EVENTLOOP_LAG_MEAN,\n\tNODEJS_EVENTLOOP_LAG_STDDEV,\n\tNODEJS_EVENTLOOP_LAG_P50,\n\tNODEJS_EVENTLOOP_LAG_P90,\n\tNODEJS_EVENTLOOP_LAG_P99,\n];\n","'use strict';\nconst Histogram = require('../histogram');\n\nlet perf_hooks;\n\ntry {\n\t// eslint-disable-next-line\n\tperf_hooks = require('perf_hooks');\n} catch {\n\t// node version is too old\n}\n\nconst NODEJS_GC_DURATION_SECONDS = 'nodejs_gc_duration_seconds';\nconst DEFAULT_GC_DURATION_BUCKETS = [0.001, 0.01, 0.1, 1, 2, 5];\n\nconst kinds = [];\nkinds[perf_hooks.constants.NODE_PERFORMANCE_GC_MAJOR] = 'major';\nkinds[perf_hooks.constants.NODE_PERFORMANCE_GC_MINOR] = 'minor';\nkinds[perf_hooks.constants.NODE_PERFORMANCE_GC_INCREMENTAL] = 'incremental';\nkinds[perf_hooks.constants.NODE_PERFORMANCE_GC_WEAKCB] = 'weakcb';\n\nmodule.exports = (registry, config = {}) => {\n\tif (!perf_hooks) {\n\t\treturn;\n\t}\n\n\tconst namePrefix = config.prefix ? config.prefix : '';\n\tconst labels = config.labels ? config.labels : {};\n\tconst labelNames = Object.keys(labels);\n\tconst buckets = config.gcDurationBuckets\n\t\t? config.gcDurationBuckets\n\t\t: DEFAULT_GC_DURATION_BUCKETS;\n\tconst gcHistogram = new Histogram({\n\t\tname: namePrefix + NODEJS_GC_DURATION_SECONDS,\n\t\thelp:\n\t\t\t'Garbage collection duration by kind, one of major, minor, incremental or weakcb.',\n\t\tlabelNames: ['kind', ...labelNames],\n\t\tbuckets,\n\t\tregisters: registry ? [registry] : undefined,\n\t});\n\n\tconst obs = new perf_hooks.PerformanceObserver(list => {\n\t\tconst entry = list.getEntries()[0];\n\t\t// Node < 16 uses entry.kind\n\t\t// Node >= 16 uses entry.detail.kind\n\t\t// See: https://nodejs.org/docs/latest-v16.x/api/deprecations.html#deprecations_dep0152_extension_performanceentry_properties\n\t\tconst kind = entry.detail ? kinds[entry.detail.kind] : kinds[entry.kind];\n\n\t\t// Convert duration from milliseconds to seconds\n\t\tgcHistogram.observe(Object.assign({ kind }, labels), entry.duration / 1000);\n\t});\n\n\tobs.observe({ entryTypes: ['gc'] });\n};\n\nmodule.exports.metricNames = [NODEJS_GC_DURATION_SECONDS];\n","'use strict';\n\nconst Gauge = require('../gauge');\nconst safeMemoryUsage = require('./helpers/safeMemoryUsage');\n\nconst NODEJS_HEAP_SIZE_TOTAL = 'nodejs_heap_size_total_bytes';\nconst NODEJS_HEAP_SIZE_USED = 'nodejs_heap_size_used_bytes';\nconst NODEJS_EXTERNAL_MEMORY = 'nodejs_external_memory_bytes';\n\nmodule.exports = (registry, config = {}) => {\n\tif (typeof process.memoryUsage !== 'function') {\n\t\treturn;\n\t}\n\tconst labels = config.labels ? config.labels : {};\n\tconst labelNames = Object.keys(labels);\n\n\tconst registers = registry ? [registry] : undefined;\n\tconst namePrefix = config.prefix ? config.prefix : '';\n\tconst collect = () => {\n\t\tconst memUsage = safeMemoryUsage();\n\t\tif (memUsage) {\n\t\t\theapSizeTotal.set(labels, memUsage.heapTotal);\n\t\t\theapSizeUsed.set(labels, memUsage.heapUsed);\n\t\t\tif (memUsage.external !== undefined) {\n\t\t\t\texternalMemUsed.set(labels, memUsage.external);\n\t\t\t}\n\t\t}\n\t};\n\n\tconst heapSizeTotal = new Gauge({\n\t\tname: namePrefix + NODEJS_HEAP_SIZE_TOTAL,\n\t\thelp: 'Process heap size from Node.js in bytes.',\n\t\tregisters,\n\t\tlabelNames,\n\t\t// Use this one metric's `collect` to set all metrics' values.\n\t\tcollect,\n\t});\n\tconst heapSizeUsed = new Gauge({\n\t\tname: namePrefix + NODEJS_HEAP_SIZE_USED,\n\t\thelp: 'Process heap size used from Node.js in bytes.',\n\t\tregisters,\n\t\tlabelNames,\n\t});\n\tconst externalMemUsed = new Gauge({\n\t\tname: namePrefix + NODEJS_EXTERNAL_MEMORY,\n\t\thelp: 'Node.js external memory size in bytes.',\n\t\tregisters,\n\t\tlabelNames,\n\t});\n};\n\nmodule.exports.metricNames = [\n\tNODEJS_HEAP_SIZE_TOTAL,\n\tNODEJS_HEAP_SIZE_USED,\n\tNODEJS_EXTERNAL_MEMORY,\n];\n","'use strict';\n\nconst Gauge = require('../gauge');\nconst v8 = require('v8');\n\nconst METRICS = ['total', 'used', 'available'];\nconst NODEJS_HEAP_SIZE = {};\n\nMETRICS.forEach(metricType => {\n\tNODEJS_HEAP_SIZE[metricType] = `nodejs_heap_space_size_${metricType}_bytes`;\n});\n\nmodule.exports = (registry, config = {}) => {\n\tconst registers = registry ? [registry] : undefined;\n\tconst namePrefix = config.prefix ? config.prefix : '';\n\n\tconst labels = config.labels ? config.labels : {};\n\tconst labelNames = ['space', ...Object.keys(labels)];\n\n\tconst gauges = {};\n\n\tMETRICS.forEach(metricType => {\n\t\tgauges[metricType] = new Gauge({\n\t\t\tname: namePrefix + NODEJS_HEAP_SIZE[metricType],\n\t\t\thelp: `Process heap space size ${metricType} from Node.js in bytes.`,\n\t\t\tlabelNames,\n\t\t\tregisters,\n\t\t});\n\t});\n\n\t// Use this one metric's `collect` to set all metrics' values.\n\tgauges.total.collect = () => {\n\t\tfor (const space of v8.getHeapSpaceStatistics()) {\n\t\t\tconst spaceName = space.space_name.substr(\n\t\t\t\t0,\n\t\t\t\tspace.space_name.indexOf('_space'),\n\t\t\t);\n\n\t\t\tgauges.total.set({ space: spaceName, ...labels }, space.space_size);\n\t\t\tgauges.used.set({ space: spaceName, ...labels }, space.space_used_size);\n\t\t\tgauges.available.set(\n\t\t\t\t{ space: spaceName, ...labels },\n\t\t\t\tspace.space_available_size,\n\t\t\t);\n\t\t}\n\t};\n};\n\nmodule.exports.metricNames = Object.values(NODEJS_HEAP_SIZE);\n","'use strict';\n\nfunction aggregateByObjectName(list) {\n\tconst data = {};\n\n\tfor (let i = 0; i < list.length; i++) {\n\t\tconst listElement = list[i];\n\n\t\tif (!listElement || typeof listElement.constructor === 'undefined') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (Object.hasOwnProperty.call(data, listElement.constructor.name)) {\n\t\t\tdata[listElement.constructor.name] += 1;\n\t\t} else {\n\t\t\tdata[listElement.constructor.name] = 1;\n\t\t}\n\t}\n\treturn data;\n}\n\nfunction updateMetrics(gauge, data, labels) {\n\tgauge.reset();\n\tfor (const key in data) {\n\t\tgauge.set(Object.assign({ type: key }, labels || {}), data[key]);\n\t}\n}\n\nmodule.exports = {\n\taggregateByObjectName,\n\tupdateMetrics,\n};\n","'use strict';\n\n// process.memoryUsage() can throw on some platforms, see #67\nfunction safeMemoryUsage() {\n\ttry {\n\t\treturn process.memoryUsage();\n\t} catch {\n\t\treturn;\n\t}\n}\n\nmodule.exports = safeMemoryUsage;\n","'use strict';\n\nconst Gauge = require('../gauge');\nconst linuxVariant = require('./osMemoryHeapLinux');\nconst safeMemoryUsage = require('./helpers/safeMemoryUsage');\n\nconst PROCESS_RESIDENT_MEMORY = 'process_resident_memory_bytes';\n\nfunction notLinuxVariant(registry, config = {}) {\n\tconst namePrefix = config.prefix ? config.prefix : '';\n\tconst labels = config.labels ? config.labels : {};\n\tconst labelNames = Object.keys(labels);\n\n\tnew Gauge({\n\t\tname: namePrefix + PROCESS_RESIDENT_MEMORY,\n\t\thelp: 'Resident memory size in bytes.',\n\t\tregisters: registry ? [registry] : undefined,\n\t\tlabelNames,\n\t\tcollect() {\n\t\t\tconst memUsage = safeMemoryUsage();\n\n\t\t\t// I don't think the other things returned from `process.memoryUsage()` is relevant to a standard export\n\t\t\tif (memUsage) {\n\t\t\t\tthis.set(labels, memUsage.rss);\n\t\t\t}\n\t\t},\n\t});\n}\n\nmodule.exports = (registry, config) =>\n\tprocess.platform === 'linux'\n\t\t? linuxVariant(registry, config)\n\t\t: notLinuxVariant(registry, config);\n\nmodule.exports.metricNames =\n\tprocess.platform === 'linux'\n\t\t? linuxVariant.metricNames\n\t\t: [PROCESS_RESIDENT_MEMORY];\n","'use strict';\n\nconst Gauge = require('../gauge');\nconst fs = require('fs');\n\nconst values = ['VmSize', 'VmRSS', 'VmData'];\n\nconst PROCESS_RESIDENT_MEMORY = 'process_resident_memory_bytes';\nconst PROCESS_VIRTUAL_MEMORY = 'process_virtual_memory_bytes';\nconst PROCESS_HEAP = 'process_heap_bytes';\n\nfunction structureOutput(input) {\n\tconst returnValue = {};\n\n\tinput\n\t\t.split('\\n')\n\t\t.filter(s => values.some(value => s.indexOf(value) === 0))\n\t\t.forEach(string => {\n\t\t\tconst split = string.split(':');\n\n\t\t\t// Get the value\n\t\t\tlet value = split[1].trim();\n\t\t\t// Remove trailing ` kb`\n\t\t\tvalue = value.substr(0, value.length - 3);\n\t\t\t// Make it into a number in bytes bytes\n\t\t\tvalue = Number(value) * 1024;\n\n\t\t\treturnValue[split[0]] = value;\n\t\t});\n\n\treturn returnValue;\n}\n\nmodule.exports = (registry, config = {}) => {\n\tconst registers = registry ? [registry] : undefined;\n\tconst namePrefix = config.prefix ? config.prefix : '';\n\tconst labels = config.labels ? config.labels : {};\n\tconst labelNames = Object.keys(labels);\n\n\tconst residentMemGauge = new Gauge({\n\t\tname: namePrefix + PROCESS_RESIDENT_MEMORY,\n\t\thelp: 'Resident memory size in bytes.',\n\t\tregisters,\n\t\tlabelNames,\n\t\t// Use this one metric's `collect` to set all metrics' values.\n\t\tcollect() {\n\t\t\ttry {\n\t\t\t\t// Sync I/O is often problematic, but /proc isn't really I/O, it\n\t\t\t\t// a virtual filesystem that maps directly to in-kernel data\n\t\t\t\t// structures and never blocks.\n\t\t\t\t//\n\t\t\t\t// Node.js/libuv do this already for process.memoryUsage(), see:\n\t\t\t\t// - https://github.com/libuv/libuv/blob/a629688008694ed8022269e66826d4d6ec688b83/src/unix/linux-core.c#L506-L523\n\t\t\t\tconst stat = fs.readFileSync('/proc/self/status', 'utf8');\n\t\t\t\tconst structuredOutput = structureOutput(stat);\n\n\t\t\t\tresidentMemGauge.set(labels, structuredOutput.VmRSS);\n\t\t\t\tvirtualMemGauge.set(labels, structuredOutput.VmSize);\n\t\t\t\theapSizeMemGauge.set(labels, structuredOutput.VmData);\n\t\t\t} catch {\n\t\t\t\t// noop\n\t\t\t}\n\t\t},\n\t});\n\tconst virtualMemGauge = new Gauge({\n\t\tname: namePrefix + PROCESS_VIRTUAL_MEMORY,\n\t\thelp: 'Virtual memory size in bytes.',\n\t\tregisters,\n\t\tlabelNames,\n\t});\n\tconst heapSizeMemGauge = new Gauge({\n\t\tname: namePrefix + PROCESS_HEAP,\n\t\thelp: 'Process heap size in bytes.',\n\t\tregisters,\n\t\tlabelNames,\n\t});\n};\n\nmodule.exports.metricNames = [\n\tPROCESS_RESIDENT_MEMORY,\n\tPROCESS_VIRTUAL_MEMORY,\n\tPROCESS_HEAP,\n];\n","'use strict';\n\nconst Counter = require('../counter');\nconst PROCESS_CPU_USER_SECONDS = 'process_cpu_user_seconds_total';\nconst PROCESS_CPU_SYSTEM_SECONDS = 'process_cpu_system_seconds_total';\nconst PROCESS_CPU_SECONDS = 'process_cpu_seconds_total';\n\nmodule.exports = (registry, config = {}) => {\n\tconst registers = registry ? [registry] : undefined;\n\tconst namePrefix = config.prefix ? config.prefix : '';\n\tconst labels = config.labels ? config.labels : {};\n\tconst labelNames = Object.keys(labels);\n\n\tlet lastCpuUsage = process.cpuUsage();\n\n\tconst cpuUserUsageCounter = new Counter({\n\t\tname: namePrefix + PROCESS_CPU_USER_SECONDS,\n\t\thelp: 'Total user CPU time spent in seconds.',\n\t\tregisters,\n\t\tlabelNames,\n\t\t// Use this one metric's `collect` to set all metrics' values.\n\t\tcollect() {\n\t\t\tconst cpuUsage = process.cpuUsage();\n\n\t\t\tconst userUsageMicros = cpuUsage.user - lastCpuUsage.user;\n\t\t\tconst systemUsageMicros = cpuUsage.system - lastCpuUsage.system;\n\n\t\t\tlastCpuUsage = cpuUsage;\n\n\t\t\tcpuUserUsageCounter.inc(labels, userUsageMicros / 1e6);\n\t\t\tcpuSystemUsageCounter.inc(labels, systemUsageMicros / 1e6);\n\t\t\tcpuUsageCounter.inc(labels, (userUsageMicros + systemUsageMicros) / 1e6);\n\t\t},\n\t});\n\tconst cpuSystemUsageCounter = new Counter({\n\t\tname: namePrefix + PROCESS_CPU_SYSTEM_SECONDS,\n\t\thelp: 'Total system CPU time spent in seconds.',\n\t\tregisters,\n\t\tlabelNames,\n\t});\n\tconst cpuUsageCounter = new Counter({\n\t\tname: namePrefix + PROCESS_CPU_SECONDS,\n\t\thelp: 'Total user and system CPU time spent in seconds.',\n\t\tregisters,\n\t\tlabelNames,\n\t});\n};\n\nmodule.exports.metricNames = [\n\tPROCESS_CPU_USER_SECONDS,\n\tPROCESS_CPU_SYSTEM_SECONDS,\n\tPROCESS_CPU_SECONDS,\n];\n","'use strict';\n\nconst { aggregateByObjectName } = require('./helpers/processMetricsHelpers');\nconst { updateMetrics } = require('./helpers/processMetricsHelpers');\nconst Gauge = require('../gauge');\n\nconst NODEJS_ACTIVE_HANDLES = 'nodejs_active_handles';\nconst NODEJS_ACTIVE_HANDLES_TOTAL = 'nodejs_active_handles_total';\n\nmodule.exports = (registry, config = {}) => {\n\t// Don't do anything if the function is removed in later nodes (exists in node@6-12...)\n\tif (typeof process._getActiveHandles !== 'function') {\n\t\treturn;\n\t}\n\n\tconst registers = registry ? [registry] : undefined;\n\tconst namePrefix = config.prefix ? config.prefix : '';\n\tconst labels = config.labels ? config.labels : {};\n\tconst labelNames = Object.keys(labels);\n\n\tnew Gauge({\n\t\tname: namePrefix + NODEJS_ACTIVE_HANDLES,\n\t\thelp:\n\t\t\t'Number of active libuv handles grouped by handle type. Every handle type is C++ class name.',\n\t\tlabelNames: ['type', ...labelNames],\n\t\tregisters,\n\t\tcollect() {\n\t\t\tconst handles = process._getActiveHandles();\n\t\t\tupdateMetrics(this, aggregateByObjectName(handles), labels);\n\t\t},\n\t});\n\tnew Gauge({\n\t\tname: namePrefix + NODEJS_ACTIVE_HANDLES_TOTAL,\n\t\thelp: 'Total number of active handles.',\n\t\tregisters,\n\t\tlabelNames,\n\t\tcollect() {\n\t\t\tconst handles = process._getActiveHandles();\n\t\t\tthis.set(labels, handles.length);\n\t\t},\n\t});\n};\n\nmodule.exports.metricNames = [\n\tNODEJS_ACTIVE_HANDLES,\n\tNODEJS_ACTIVE_HANDLES_TOTAL,\n];\n","'use strict';\n\nconst Gauge = require('../gauge');\nconst fs = require('fs');\n\nconst PROCESS_MAX_FDS = 'process_max_fds';\n\nlet maxFds;\n\nmodule.exports = (registry, config = {}) => {\n\tif (maxFds === undefined) {\n\t\t// This will fail if a linux-like procfs is not available.\n\t\ttry {\n\t\t\tconst limits = fs.readFileSync('/proc/self/limits', 'utf8');\n\t\t\tconst lines = limits.split('\\n');\n\t\t\tfor (const line of lines) {\n\t\t\t\tif (line.startsWith('Max open files')) {\n\t\t\t\t\tconst parts = line.split(/  +/);\n\t\t\t\t\tmaxFds = Number(parts[1]);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} catch {\n\t\t\treturn;\n\t\t}\n\t}\n\n\tif (maxFds === undefined) return;\n\n\tconst namePrefix = config.prefix ? config.prefix : '';\n\tconst labels = config.labels ? config.labels : {};\n\tconst labelNames = Object.keys(labels);\n\n\tnew Gauge({\n\t\tname: namePrefix + PROCESS_MAX_FDS,\n\t\thelp: 'Maximum number of open file descriptors.',\n\t\tregisters: registry ? [registry] : undefined,\n\t\tlabelNames,\n\t\tcollect() {\n\t\t\tif (maxFds !== undefined) this.set(labels, maxFds);\n\t\t},\n\t});\n};\n\nmodule.exports.metricNames = [PROCESS_MAX_FDS];\n","'use strict';\n\nconst Gauge = require('../gauge');\nconst fs = require('fs');\nconst process = require('process');\n\nconst PROCESS_OPEN_FDS = 'process_open_fds';\n\nmodule.exports = (registry, config = {}) => {\n\tif (process.platform !== 'linux') {\n\t\treturn;\n\t}\n\n\tconst namePrefix = config.prefix ? config.prefix : '';\n\tconst labels = config.labels ? config.labels : {};\n\tconst labelNames = Object.keys(labels);\n\n\tnew Gauge({\n\t\tname: namePrefix + PROCESS_OPEN_FDS,\n\t\thelp: 'Number of open file descriptors.',\n\t\tregisters: registry ? [registry] : undefined,\n\t\tlabelNames,\n\t\tcollect() {\n\t\t\ttry {\n\t\t\t\tconst fds = fs.readdirSync('/proc/self/fd');\n\t\t\t\t// Minus 1 to not count the fd that was used by readdirSync(),\n\t\t\t\t// it's now closed.\n\t\t\t\tthis.set(labels, fds.length - 1);\n\t\t\t} catch {\n\t\t\t\t// noop\n\t\t\t}\n\t\t},\n\t});\n};\n\nmodule.exports.metricNames = [PROCESS_OPEN_FDS];\n","'use strict';\nconst Gauge = require('../gauge');\nconst { aggregateByObjectName } = require('./helpers/processMetricsHelpers');\nconst { updateMetrics } = require('./helpers/processMetricsHelpers');\n\nconst NODEJS_ACTIVE_REQUESTS = 'nodejs_active_requests';\nconst NODEJS_ACTIVE_REQUESTS_TOTAL = 'nodejs_active_requests_total';\n\nmodule.exports = (registry, config = {}) => {\n\t// Don't do anything if the function is removed in later nodes (exists in node@6)\n\tif (typeof process._getActiveRequests !== 'function') {\n\t\treturn;\n\t}\n\n\tconst namePrefix = config.prefix ? config.prefix : '';\n\tconst labels = config.labels ? config.labels : {};\n\tconst labelNames = Object.keys(labels);\n\n\tnew Gauge({\n\t\tname: namePrefix + NODEJS_ACTIVE_REQUESTS,\n\t\thelp:\n\t\t\t'Number of active libuv requests grouped by request type. Every request type is C++ class name.',\n\t\tlabelNames: ['type', ...labelNames],\n\t\tregisters: registry ? [registry] : undefined,\n\t\tcollect() {\n\t\t\tconst requests = process._getActiveRequests();\n\t\t\tupdateMetrics(this, aggregateByObjectName(requests), labels);\n\t\t},\n\t});\n\n\tnew Gauge({\n\t\tname: namePrefix + NODEJS_ACTIVE_REQUESTS_TOTAL,\n\t\thelp: 'Total number of active requests.',\n\t\tregisters: registry ? [registry] : undefined,\n\t\tlabelNames,\n\t\tcollect() {\n\t\t\tconst requests = process._getActiveRequests();\n\t\t\tthis.set(labels, requests.length);\n\t\t},\n\t});\n};\n\nmodule.exports.metricNames = [\n\tNODEJS_ACTIVE_REQUESTS,\n\tNODEJS_ACTIVE_REQUESTS_TOTAL,\n];\n","'use strict';\n\nconst Gauge = require('../gauge');\nconst startInSeconds = Math.round(Date.now() / 1000 - process.uptime());\n\nconst PROCESS_START_TIME = 'process_start_time_seconds';\n\nmodule.exports = (registry, config = {}) => {\n\tconst namePrefix = config.prefix ? config.prefix : '';\n\tconst labels = config.labels ? config.labels : {};\n\tconst labelNames = Object.keys(labels);\n\n\tnew Gauge({\n\t\tname: namePrefix + PROCESS_START_TIME,\n\t\thelp: 'Start time of the process since unix epoch in seconds.',\n\t\tregisters: registry ? [registry] : undefined,\n\t\tlabelNames,\n\t\taggregator: 'omit',\n\t\tcollect() {\n\t\t\tthis.set(labels, startInSeconds);\n\t\t},\n\t});\n};\n\nmodule.exports.metricNames = [PROCESS_START_TIME];\n","'use strict';\n\nconst Gauge = require('../gauge');\nconst version = process.version;\nconst versionSegments = version.slice(1).split('.').map(Number);\n\nconst NODE_VERSION_INFO = 'nodejs_version_info';\n\nmodule.exports = (registry, config = {}) => {\n\tconst namePrefix = config.prefix ? config.prefix : '';\n\tconst labels = config.labels ? config.labels : {};\n\tconst labelNames = Object.keys(labels);\n\n\tnew Gauge({\n\t\tname: namePrefix + NODE_VERSION_INFO,\n\t\thelp: 'Node.js version info.',\n\t\tlabelNames: ['version', 'major', 'minor', 'patch', ...labelNames],\n\t\tregisters: registry ? [registry] : undefined,\n\t\taggregator: 'first',\n\t\tcollect() {\n\t\t\t// Needs to be in collect() so value is present even if reg is reset\n\t\t\tthis.labels(\n\t\t\t\tversion,\n\t\t\t\tversionSegments[0],\n\t\t\t\tversionSegments[1],\n\t\t\t\tversionSegments[2],\n\t\t\t\t...Object.values(labels),\n\t\t\t).set(1);\n\t\t},\n\t});\n};\n\nmodule.exports.metricNames = [NODE_VERSION_INFO];\n","'use strict';\n\nconst url = require('url');\nconst http = require('http');\nconst https = require('https');\nconst { globalRegistry } = require('./registry');\n\nclass Pushgateway {\n\tconstructor(gatewayUrl, options, registry) {\n\t\tif (!registry) {\n\t\t\tregistry = globalRegistry;\n\t\t}\n\t\tthis.registry = registry;\n\t\tthis.gatewayUrl = gatewayUrl;\n\t\tthis.requestOptions = Object.assign({}, options);\n\t}\n\n\tpushAdd(params) {\n\t\tif (!params || !params.jobName) {\n\t\t\tthrow new Error('Missing jobName parameter');\n\t\t}\n\n\t\treturn useGateway.call(this, 'POST', params.jobName, params.groupings);\n\t}\n\n\tpush(params) {\n\t\tif (!params || !params.jobName) {\n\t\t\tthrow new Error('Missing jobName parameter');\n\t\t}\n\n\t\treturn useGateway.call(this, 'PUT', params.jobName, params.groupings);\n\t}\n\n\tdelete(params) {\n\t\tif (!params || !params.jobName) {\n\t\t\tthrow new Error('Missing jobName parameter');\n\t\t}\n\n\t\treturn useGateway.call(this, 'DELETE', params.jobName, params.groupings);\n\t}\n}\nasync function useGateway(method, job, groupings) {\n\t// `URL` first added in v6.13.0\n\t// eslint-disable-next-line node/no-deprecated-api\n\tconst gatewayUrlParsed = url.parse(this.gatewayUrl);\n\tconst gatewayUrlPath =\n\t\tgatewayUrlParsed.pathname && gatewayUrlParsed.pathname !== '/'\n\t\t\t? gatewayUrlParsed.pathname\n\t\t\t: '';\n\tconst path = `${gatewayUrlPath}/metrics/job/${encodeURIComponent(\n\t\tjob,\n\t)}${generateGroupings(groupings)}`;\n\n\t// eslint-disable-next-line node/no-deprecated-api\n\tconst target = url.resolve(this.gatewayUrl, path);\n\t// eslint-disable-next-line node/no-deprecated-api\n\tconst requestParams = url.parse(target);\n\tconst httpModule = isHttps(requestParams.href) ? https : http;\n\tconst options = Object.assign(requestParams, this.requestOptions, {\n\t\tmethod,\n\t});\n\n\treturn new Promise((resolve, reject) => {\n\t\tconst req = httpModule.request(options, resp => {\n\t\t\tlet body = '';\n\t\t\tresp.setEncoding('utf8');\n\t\t\tresp.on('data', chunk => {\n\t\t\t\tbody += chunk;\n\t\t\t});\n\t\t\tresp.on('end', () => {\n\t\t\t\tresolve({ resp, body });\n\t\t\t});\n\t\t});\n\t\treq.on('error', err => {\n\t\t\treject(err);\n\t\t});\n\n\t\tif (method !== 'DELETE') {\n\t\t\tthis.registry\n\t\t\t\t.metrics()\n\t\t\t\t.then(metrics => {\n\t\t\t\t\treq.write(metrics);\n\t\t\t\t\treq.end();\n\t\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\treject(err);\n\t\t\t\t});\n\t\t} else {\n\t\t\treq.end();\n\t\t}\n\t});\n}\n\nfunction generateGroupings(groupings) {\n\tif (!groupings) {\n\t\treturn '';\n\t}\n\treturn Object.keys(groupings)\n\t\t.map(\n\t\t\tkey =>\n\t\t\t\t`/${encodeURIComponent(key)}/${encodeURIComponent(groupings[key])}`,\n\t\t)\n\t\t.join('');\n}\n\nfunction isHttps(href) {\n\treturn href.search(/^https/) !== -1;\n}\n\nmodule.exports = Pushgateway;\n","'use strict';\nconst { getValueAsString } = require('./util');\n\nfunction escapeString(str) {\n\treturn str.replace(/\\n/g, '\\\\n').replace(/\\\\(?!n)/g, '\\\\\\\\');\n}\nfunction escapeLabelValue(str) {\n\tif (typeof str !== 'string') {\n\t\treturn str;\n\t}\n\treturn escapeString(str).replace(/\"/g, '\\\\\"');\n}\n\nclass Registry {\n\tconstructor() {\n\t\tthis._metrics = {};\n\t\tthis._collectors = [];\n\t\tthis._defaultLabels = {};\n\t}\n\n\tgetMetricsAsArray() {\n\t\treturn Object.values(this._metrics);\n\t}\n\n\tasync getMetricAsPrometheusString(metric) {\n\t\tconst item = await metric.get();\n\t\tconst name = escapeString(item.name);\n\t\tconst help = `# HELP ${name} ${escapeString(item.help)}`;\n\t\tconst type = `# TYPE ${name} ${item.type}`;\n\t\tconst defaultLabelNames = Object.keys(this._defaultLabels);\n\n\t\tlet values = '';\n\t\tfor (const val of item.values || []) {\n\t\t\tval.labels = val.labels || {};\n\n\t\t\tif (defaultLabelNames.length > 0) {\n\t\t\t\t// Make a copy before mutating\n\t\t\t\tval.labels = Object.assign({}, val.labels);\n\n\t\t\t\tfor (const labelName of defaultLabelNames) {\n\t\t\t\t\tval.labels[labelName] =\n\t\t\t\t\t\tval.labels[labelName] || this._defaultLabels[labelName];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet metricName = val.metricName || item.name;\n\n\t\t\tconst keys = Object.keys(val.labels);\n\t\t\tconst size = keys.length;\n\t\t\tif (size > 0) {\n\t\t\t\tlet labels = '';\n\t\t\t\tlet i = 0;\n\t\t\t\tfor (; i < size - 1; i++) {\n\t\t\t\t\tlabels += `${keys[i]}=\"${escapeLabelValue(val.labels[keys[i]])}\",`;\n\t\t\t\t}\n\t\t\t\tlabels += `${keys[i]}=\"${escapeLabelValue(val.labels[keys[i]])}\"`;\n\t\t\t\tmetricName += `{${labels}}`;\n\t\t\t}\n\n\t\t\tvalues += `${metricName} ${getValueAsString(val.value)}\\n`;\n\t\t}\n\n\t\treturn `${help}\\n${type}\\n${values}`.trim();\n\t}\n\n\tasync metrics() {\n\t\tconst promises = [];\n\n\t\tfor (const metric of this.getMetricsAsArray()) {\n\t\t\tpromises.push(this.getMetricAsPrometheusString(metric));\n\t\t}\n\n\t\tconst resolves = await Promise.all(promises);\n\n\t\treturn `${resolves.join('\\n\\n')}\\n`;\n\t}\n\n\tregisterMetric(metric) {\n\t\tif (this._metrics[metric.name] && this._metrics[metric.name] !== metric) {\n\t\t\tthrow new Error(\n\t\t\t\t`A metric with the name ${metric.name} has already been registered.`,\n\t\t\t);\n\t\t}\n\n\t\tthis._metrics[metric.name] = metric;\n\t}\n\n\tclear() {\n\t\tthis._metrics = {};\n\t\tthis._defaultLabels = {};\n\t}\n\n\tasync getMetricsAsJSON() {\n\t\tconst metrics = [];\n\t\tconst defaultLabelNames = Object.keys(this._defaultLabels);\n\n\t\tconst promises = [];\n\n\t\tfor (const metric of this.getMetricsAsArray()) {\n\t\t\tpromises.push(metric.get());\n\t\t}\n\n\t\tconst resolves = await Promise.all(promises);\n\n\t\tfor (const item of resolves) {\n\t\t\tif (item.values && defaultLabelNames.length > 0) {\n\t\t\t\tfor (const val of item.values) {\n\t\t\t\t\t// Make a copy before mutating\n\t\t\t\t\tval.labels = Object.assign({}, val.labels);\n\n\t\t\t\t\tfor (const labelName of defaultLabelNames) {\n\t\t\t\t\t\tval.labels[labelName] =\n\t\t\t\t\t\t\tval.labels[labelName] || this._defaultLabels[labelName];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tmetrics.push(item);\n\t\t}\n\n\t\treturn metrics;\n\t}\n\n\tremoveSingleMetric(name) {\n\t\tdelete this._metrics[name];\n\t}\n\n\tgetSingleMetricAsString(name) {\n\t\treturn this.getMetricAsPrometheusString(this._metrics[name]);\n\t}\n\n\tgetSingleMetric(name) {\n\t\treturn this._metrics[name];\n\t}\n\n\tsetDefaultLabels(labels) {\n\t\tthis._defaultLabels = labels;\n\t}\n\n\tresetMetrics() {\n\t\tfor (const metric in this._metrics) {\n\t\t\tthis._metrics[metric].reset();\n\t\t}\n\t}\n\n\tget contentType() {\n\t\treturn 'text/plain; version=0.0.4; charset=utf-8';\n\t}\n\n\tstatic merge(registers) {\n\t\tconst mergedRegistry = new Registry();\n\n\t\tconst metricsToMerge = registers.reduce(\n\t\t\t(acc, reg) => acc.concat(reg.getMetricsAsArray()),\n\t\t\t[],\n\t\t);\n\n\t\tmetricsToMerge.forEach(mergedRegistry.registerMetric, mergedRegistry);\n\t\treturn mergedRegistry;\n\t}\n}\n\nmodule.exports = Registry;\nmodule.exports.globalRegistry = new Registry();\n","/**\n * Summary\n */\n'use strict';\n\nconst util = require('util');\nconst type = 'summary';\nconst { getLabels, hashObject, removeLabels } = require('./util');\nconst { validateLabel } = require('./validation');\nconst { Metric } = require('./metric');\nconst timeWindowQuantiles = require('./timeWindowQuantiles');\n\nconst DEFAULT_COMPRESS_COUNT = 1000; // every 1000 measurements\n\nclass Summary extends Metric {\n\tconstructor(config) {\n\t\tsuper(config, {\n\t\t\tpercentiles: [0.01, 0.05, 0.5, 0.9, 0.95, 0.99, 0.999],\n\t\t\tcompressCount: DEFAULT_COMPRESS_COUNT,\n\t\t\thashMap: {},\n\t\t});\n\n\t\tfor (const label of this.labelNames) {\n\t\t\tif (label === 'quantile')\n\t\t\t\tthrow new Error('quantile is a reserved label keyword');\n\t\t}\n\n\t\tif (this.labelNames.length === 0) {\n\t\t\tthis.hashMap = {\n\t\t\t\t[hashObject({})]: {\n\t\t\t\t\tlabels: {},\n\t\t\t\t\ttd: new timeWindowQuantiles(this.maxAgeSeconds, this.ageBuckets),\n\t\t\t\t\tcount: 0,\n\t\t\t\t\tsum: 0,\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\t}\n\n\t/**\n\t * Observe a value\n\t * @param {object} labels - Object with labels where key is the label key and value is label value. Can only be one level deep\n\t * @param {Number} value - Value to observe\n\t * @returns {void}\n\t */\n\tobserve(labels, value) {\n\t\tobserve.call(this, labels === 0 ? 0 : labels || {})(value);\n\t}\n\n\tasync get() {\n\t\tif (this.collect) {\n\t\t\tconst v = this.collect();\n\t\t\tif (v instanceof Promise) await v;\n\t\t}\n\t\tconst data = Object.values(this.hashMap);\n\t\tconst values = [];\n\t\tdata.forEach(s => {\n\t\t\textractSummariesForExport(s, this.percentiles).forEach(v => {\n\t\t\t\tvalues.push(v);\n\t\t\t});\n\t\t\tvalues.push(getSumForExport(s, this));\n\t\t\tvalues.push(getCountForExport(s, this));\n\t\t});\n\n\t\treturn {\n\t\t\tname: this.name,\n\t\t\thelp: this.help,\n\t\t\ttype,\n\t\t\tvalues,\n\t\t\taggregator: this.aggregator,\n\t\t};\n\t}\n\n\treset() {\n\t\tconst data = Object.values(this.hashMap);\n\t\tdata.forEach(s => {\n\t\t\ts.td.reset();\n\t\t\ts.count = 0;\n\t\t\ts.sum = 0;\n\t\t});\n\t}\n\n\t/**\n\t * Start a timer that could be used to logging durations\n\t * @param {object} labels - Object with labels where key is the label key and value is label value. Can only be one level deep\n\t * @returns {function} - Function to invoke when you want to stop the timer and observe the duration in seconds\n\t * @example\n\t * var end = summary.startTimer();\n\t * makeExpensiveXHRRequest(function(err, res) {\n\t *\tend(); //Observe the duration of expensiveXHRRequest\n\t * });\n\t */\n\tstartTimer(labels) {\n\t\treturn startTimer.call(this, labels)();\n\t}\n\n\tlabels(...args) {\n\t\tconst labels = getLabels(this.labelNames, args);\n\t\tvalidateLabel(this.labelNames, labels);\n\t\treturn {\n\t\t\tobserve: observe.call(this, labels),\n\t\t\tstartTimer: startTimer.call(this, labels),\n\t\t};\n\t}\n\n\tremove(...args) {\n\t\tconst labels = getLabels(this.labelNames, args);\n\t\tvalidateLabel(this.labelNames, labels);\n\t\tremoveLabels.call(this, this.hashMap, labels);\n\t}\n}\n\nfunction extractSummariesForExport(summaryOfLabels, percentiles) {\n\tsummaryOfLabels.td.compress();\n\n\treturn percentiles.map(percentile => {\n\t\tconst percentileValue = summaryOfLabels.td.percentile(percentile);\n\t\treturn {\n\t\t\tlabels: Object.assign({ quantile: percentile }, summaryOfLabels.labels),\n\t\t\tvalue: percentileValue ? percentileValue : 0,\n\t\t};\n\t});\n}\n\nfunction getCountForExport(value, summary) {\n\treturn {\n\t\tmetricName: `${summary.name}_count`,\n\t\tlabels: value.labels,\n\t\tvalue: value.count,\n\t};\n}\n\nfunction getSumForExport(value, summary) {\n\treturn {\n\t\tmetricName: `${summary.name}_sum`,\n\t\tlabels: value.labels,\n\t\tvalue: value.sum,\n\t};\n}\n\nfunction startTimer(startLabels) {\n\treturn () => {\n\t\tconst start = process.hrtime();\n\t\treturn endLabels => {\n\t\t\tconst delta = process.hrtime(start);\n\t\t\tthis.observe(\n\t\t\t\tObject.assign({}, startLabels, endLabels),\n\t\t\t\tdelta[0] + delta[1] / 1e9,\n\t\t\t);\n\t\t};\n\t};\n}\n\nfunction observe(labels) {\n\treturn value => {\n\t\tconst labelValuePair = convertLabelsAndValues(labels, value);\n\n\t\tvalidateLabel(this.labelNames, labels);\n\t\tif (!Number.isFinite(labelValuePair.value)) {\n\t\t\tthrow new TypeError(\n\t\t\t\t`Value is not a valid number: ${util.format(labelValuePair.value)}`,\n\t\t\t);\n\t\t}\n\n\t\tconst hash = hashObject(labelValuePair.labels);\n\t\tlet summaryOfLabel = this.hashMap[hash];\n\t\tif (!summaryOfLabel) {\n\t\t\tsummaryOfLabel = {\n\t\t\t\tlabels: labelValuePair.labels,\n\t\t\t\ttd: new timeWindowQuantiles(this.maxAgeSeconds, this.ageBuckets),\n\t\t\t\tcount: 0,\n\t\t\t\tsum: 0,\n\t\t\t};\n\t\t}\n\n\t\tsummaryOfLabel.td.push(labelValuePair.value);\n\t\tsummaryOfLabel.count++;\n\t\tif (summaryOfLabel.count % this.compressCount === 0) {\n\t\t\tsummaryOfLabel.td.compress();\n\t\t}\n\t\tsummaryOfLabel.sum += labelValuePair.value;\n\t\tthis.hashMap[hash] = summaryOfLabel;\n\t};\n}\n\nfunction convertLabelsAndValues(labels, value) {\n\tif (value === undefined) {\n\t\treturn {\n\t\t\tvalue: labels,\n\t\t\tlabels: {},\n\t\t};\n\t}\n\n\treturn {\n\t\tlabels,\n\t\tvalue,\n\t};\n}\n\nmodule.exports = Summary;\n","'use strict';\n\nconst { TDigest } = require('tdigest');\n\nclass TimeWindowQuantiles {\n\tconstructor(maxAgeSeconds, ageBuckets) {\n\t\tthis.maxAgeSeconds = maxAgeSeconds || 0;\n\t\tthis.ageBuckets = ageBuckets || 0;\n\n\t\tthis.shouldRotate = maxAgeSeconds && ageBuckets;\n\n\t\tthis.ringBuffer = Array(ageBuckets).fill(new TDigest());\n\t\tthis.currentBuffer = 0;\n\n\t\tthis.lastRotateTimestampMillis = Date.now();\n\t\tthis.durationBetweenRotatesMillis =\n\t\t\t(maxAgeSeconds * 1000) / ageBuckets || Infinity;\n\t}\n\n\tpercentile(quantile) {\n\t\tconst bucket = rotate.call(this);\n\t\treturn bucket.percentile(quantile);\n\t}\n\n\tpush(value) {\n\t\trotate.call(this);\n\t\tthis.ringBuffer.forEach(bucket => {\n\t\t\tbucket.push(value);\n\t\t});\n\t}\n\n\treset() {\n\t\tthis.ringBuffer.forEach(bucket => {\n\t\t\tbucket.reset();\n\t\t});\n\t}\n\n\tcompress() {\n\t\tthis.ringBuffer.forEach(bucket => {\n\t\t\tbucket.compress();\n\t\t});\n\t}\n}\n\nfunction rotate() {\n\tlet timeSinceLastRotateMillis = Date.now() - this.lastRotateTimestampMillis;\n\twhile (\n\t\ttimeSinceLastRotateMillis > this.durationBetweenRotatesMillis &&\n\t\tthis.shouldRotate\n\t) {\n\t\tthis.ringBuffer[this.currentBuffer] = new TDigest();\n\n\t\tif (++this.currentBuffer >= this.ringBuffer.length) {\n\t\t\tthis.currentBuffer = 0;\n\t\t}\n\t\ttimeSinceLastRotateMillis -= this.durationBetweenRotatesMillis;\n\t\tthis.lastRotateTimestampMillis += this.durationBetweenRotatesMillis;\n\t}\n\treturn this.ringBuffer[this.currentBuffer];\n}\n\nmodule.exports = TimeWindowQuantiles;\n","'use strict';\n\nexports.getValueAsString = function getValueString(value) {\n\tif (Number.isNaN(value)) {\n\t\treturn 'Nan';\n\t} else if (!Number.isFinite(value)) {\n\t\tif (value < 0) {\n\t\t\treturn '-Inf';\n\t\t} else {\n\t\t\treturn '+Inf';\n\t\t}\n\t} else {\n\t\treturn `${value}`;\n\t}\n};\n\nexports.removeLabels = function removeLabels(hashMap, labels) {\n\tconst hash = hashObject(labels);\n\tdelete hashMap[hash];\n};\n\nexports.setValue = function setValue(hashMap, value, labels) {\n\tconst hash = hashObject(labels);\n\thashMap[hash] = {\n\t\tvalue: typeof value === 'number' ? value : 0,\n\t\tlabels: labels || {},\n\t};\n\treturn hashMap;\n};\n\nexports.getLabels = function (labelNames, args) {\n\tif (typeof args[0] === 'object') {\n\t\treturn args[0];\n\t}\n\n\tif (labelNames.length !== args.length) {\n\t\tthrow new Error('Invalid number of arguments');\n\t}\n\n\tconst acc = {};\n\tfor (let i = 0; i < labelNames.length; i++) {\n\t\tacc[labelNames[i]] = args[i];\n\t}\n\treturn acc;\n};\n\nfunction hashObject(labels) {\n\t// We don't actually need a hash here. We just need a string that\n\t// is unique for each possible labels object and consistent across\n\t// calls with equivalent labels objects.\n\tlet keys = Object.keys(labels);\n\tif (keys.length === 0) {\n\t\treturn '';\n\t}\n\t// else\n\tif (keys.length > 1) {\n\t\tkeys = keys.sort(); // need consistency across calls\n\t}\n\n\tlet hash = '';\n\tlet i = 0;\n\tconst size = keys.length;\n\tfor (; i < size - 1; i++) {\n\t\thash += `${keys[i]}:${labels[keys[i]]},`;\n\t}\n\thash += `${keys[i]}:${labels[keys[i]]}`;\n\treturn hash;\n}\nexports.hashObject = hashObject;\n\nexports.isObject = function isObject(obj) {\n\treturn obj === Object(obj);\n};\n\nclass Grouper extends Map {\n\t/**\n\t * Adds the `value` to the `key`'s array of values.\n\t * @param {*} key Key to set.\n\t * @param {*} value Value to add to `key`'s array.\n\t * @returns {undefined} undefined.\n\t */\n\tadd(key, value) {\n\t\tif (this.has(key)) {\n\t\t\tthis.get(key).push(value);\n\t\t} else {\n\t\t\tthis.set(key, [value]);\n\t\t}\n\t}\n}\n\nexports.Grouper = Grouper;\n","'use strict';\n\nconst util = require('util');\n\n// These are from https://prometheus.io/docs/concepts/data_model/#metric-names-and-labels\nconst metricRegexp = /^[a-zA-Z_:][a-zA-Z0-9_:]*$/;\nconst labelRegexp = /^[a-zA-Z_][a-zA-Z0-9_]*$/;\n\nexports.validateMetricName = function (name) {\n\treturn metricRegexp.test(name);\n};\n\nexports.validateLabelName = function (names = []) {\n\treturn names.every(name => labelRegexp.test(name));\n};\n\nexports.validateLabel = function validateLabel(savedLabels, labels) {\n\tfor (const label in labels) {\n\t\tif (!savedLabels.includes(label)) {\n\t\t\tthrow new Error(\n\t\t\t\t`Added label \"${label}\" is not included in initial labelset: ${util.inspect(\n\t\t\t\t\tsavedLabels,\n\t\t\t\t)}`,\n\t\t\t);\n\t\t}\n\t}\n};\n","//\n// TDigest:\n//\n// approximate distribution percentiles from a stream of reals\n//\nvar RBTree = require('bintrees').RBTree;\n\nfunction TDigest(delta, K, CX) {\n    // allocate a TDigest structure.\n    //\n    // delta is the compression factor, the max fraction of mass that\n    // can be owned by one centroid (bigger, up to 1.0, means more\n    // compression). delta=false switches off TDigest behavior and treats\n    // the distribution as discrete, with no merging and exact values\n    // reported.\n    //\n    // K is a size threshold that triggers recompression as the TDigest\n    // grows during input.  (Set it to 0 to disable automatic recompression)\n    //\n    // CX specifies how often to update cached cumulative totals used\n    // for quantile estimation during ingest (see cumulate()).  Set to\n    // 0 to use exact quantiles for each new point.\n    //\n    this.discrete = (delta === false);\n    this.delta = delta || 0.01;\n    this.K = (K === undefined) ? 25 : K;\n    this.CX = (CX === undefined) ? 1.1 : CX;\n    this.centroids = new RBTree(compare_centroid_means);\n    this.nreset = 0;\n    this.reset();\n}\n\nTDigest.prototype.reset = function() {\n    // prepare to digest new points.\n    //\n    this.centroids.clear();\n    this.n = 0;\n    this.nreset += 1;\n    this.last_cumulate = 0;\n};\n\nTDigest.prototype.size = function() {\n    return this.centroids.size;\n};\n\nTDigest.prototype.toArray = function(everything) {\n    // return {mean,n} of centroids as an array ordered by mean.\n    //\n    var result = [];\n    if (everything) {\n        this._cumulate(true); // be sure cumns are exact\n        this.centroids.each(function(c) { result.push(c); });\n    } else {\n        this.centroids.each(function(c) { result.push({mean:c.mean, n:c.n}); });\n    }\n    return result;\n};\n\nTDigest.prototype.summary = function() {\n    var approx = (this.discrete) ? \"exact \" : \"approximating \";\n    var s = [approx + this.n + \" samples using \" + this.size() + \" centroids\",\n             \"min = \"+this.percentile(0),\n             \"Q1  = \"+this.percentile(0.25),\n             \"Q2  = \"+this.percentile(0.5),\n             \"Q3  = \"+this.percentile(0.75),\n             \"max = \"+this.percentile(1.0)];\n    return s.join('\\n');\n};\n\nfunction compare_centroid_means(a, b) {\n    // order two centroids by mean.\n    //\n    return (a.mean > b.mean) ? 1 : (a.mean < b.mean) ? -1 : 0;\n}\n\nfunction compare_centroid_mean_cumns(a, b) {\n    // order two centroids by mean_cumn.\n    //\n    return (a.mean_cumn - b.mean_cumn);\n}\n\nTDigest.prototype.push = function(x, n) {\n    // incorporate value or array of values x, having count n into the\n    // TDigest. n defaults to 1.\n    //\n    n = n || 1;\n    x = Array.isArray(x) ? x : [x];\n    for (var i = 0 ; i < x.length ; i++) {\n        this._digest(x[i], n);\n    }\n};\n\nTDigest.prototype.push_centroid = function(c) {\n    // incorporate centroid or array of centroids c\n    //\n    c = Array.isArray(c) ? c : [c];\n    for (var i = 0 ; i < c.length ; i++) {\n        this._digest(c[i].mean, c[i].n);\n    }\n};\n\nTDigest.prototype._cumulate = function(exact) {\n    // update cumulative counts for each centroid\n    //\n    // exact: falsey means only cumulate after sufficient\n    // growth. During ingest, these counts are used as quantile\n    // estimates, and they work well even when somewhat out of\n    // date. (this is a departure from the publication, you may set CX\n    // to 0 to disable).\n    //\n    if (this.n === this.last_cumulate ||\n        !exact && this.CX && this.CX > (this.n / this.last_cumulate)) {\n        return;\n    }\n    var cumn = 0;\n    var self = this;\n    this.centroids.each(function(c) {\n        c.mean_cumn = cumn + c.n / 2; // half of n at the mean\n        cumn = c.cumn = cumn + c.n;\n    });\n    this.n = this.last_cumulate = cumn;\n};\n\nTDigest.prototype.find_nearest = function(x) {\n    // find the centroid closest to x. The assumption of\n    // unique means and a unique nearest centroid departs from the\n    // paper, see _digest() below\n    //\n    if (this.size() === 0) {\n        return null;\n    }\n    var iter = this.centroids.lowerBound({mean:x}); // x <= iter || iter==null\n    var c = (iter.data() === null) ? iter.prev() : iter.data();\n    if (c.mean === x || this.discrete) {\n        return c; // c is either x or a neighbor (discrete: no distance func)\n    }\n    var prev = iter.prev();\n    if (prev && Math.abs(prev.mean - x) < Math.abs(c.mean - x)) {\n        return prev;\n    } else {\n        return c;\n    }\n};\n\nTDigest.prototype._new_centroid = function(x, n, cumn) {\n    // create and insert a new centroid into the digest (don't update\n    // cumulatives).\n    //\n    var c = {mean:x, n:n, cumn:cumn};\n    this.centroids.insert(c);\n    this.n += n;\n    return c;\n};\n\nTDigest.prototype._addweight = function(nearest, x, n) {\n    // add weight at location x to nearest centroid.  adding x to\n    // nearest will not shift its relative position in the tree and\n    // require reinsertion.\n    //\n    if (x !== nearest.mean) {\n        nearest.mean += n * (x - nearest.mean) / (nearest.n + n);\n    }\n    nearest.cumn += n;\n    nearest.mean_cumn += n / 2;\n    nearest.n += n;\n    this.n += n;\n};\n\nTDigest.prototype._digest = function(x, n) {\n    // incorporate value x, having count n into the TDigest.\n    //\n    var min = this.centroids.min();\n    var max = this.centroids.max();\n    var nearest = this.find_nearest(x);\n    if (nearest && nearest.mean === x) {\n        // accumulate exact matches into the centroid without\n        // limit. this is a departure from the paper, made so\n        // centroids remain unique and code can be simple.\n        this._addweight(nearest, x, n);\n    } else if (nearest === min) {\n        this._new_centroid(x, n, 0); // new point around min boundary\n    } else if (nearest === max ) {\n        this._new_centroid(x, n, this.n); // new point around max boundary\n    } else if (this.discrete) {\n        this._new_centroid(x, n, nearest.cumn); // never merge\n    } else {\n        // conider a merge based on nearest centroid's capacity. if\n        // there's not room for all of n, don't bother merging any of\n        // it into nearest, as we'll have to make a new centroid\n        // anyway for the remainder (departure from the paper).\n        var p = nearest.mean_cumn / this.n;\n        var max_n = Math.floor(4 * this.n * this.delta * p * (1 - p));\n        if (max_n - nearest.n >= n) {\n            this._addweight(nearest, x, n);\n        } else {\n            this._new_centroid(x, n, nearest.cumn);\n        }\n    }\n    this._cumulate(false);\n    if (!this.discrete && this.K && this.size() > this.K / this.delta) {\n        // re-process the centroids and hope for some compression.\n        this.compress();\n    }\n};\n\nTDigest.prototype.bound_mean = function(x) {\n    // find centroids lower and upper such that lower.mean < x <\n    // upper.mean or lower.mean === x === upper.mean. Don't call\n    // this for x out of bounds.\n    //\n    var iter = this.centroids.upperBound({mean:x}); // x < iter\n    var lower = iter.prev();      // lower <= x\n    var upper = (lower.mean === x) ? lower : iter.next();\n    return [lower, upper];\n};\n\nTDigest.prototype.p_rank = function(x_or_xlist) {\n    // return approximate percentile-ranks (0..1) for data value x.\n    // or list of x.  calculated according to\n    // https://en.wikipedia.org/wiki/Percentile_rank\n    //\n    // (Note that in continuous mode, boundary sample values will\n    // report half their centroid weight inward from 0/1 as the\n    // percentile-rank. X values outside the observed range return\n    // 0/1)\n    //\n    // this triggers cumulate() if cumn's are out of date.\n    //\n    var xs = Array.isArray(x_or_xlist) ? x_or_xlist : [x_or_xlist];\n    var ps = xs.map(this._p_rank, this);\n    return Array.isArray(x_or_xlist) ? ps : ps[0];\n};\n\nTDigest.prototype._p_rank = function(x) {\n    if (this.size() === 0) {\n        return undefined;\n    } else if (x < this.centroids.min().mean) {\n        return 0.0;\n    } else if (x > this.centroids.max().mean) {\n        return 1.0;\n    }\n    // find centroids that bracket x and interpolate x's cumn from\n    // their cumn's.\n    this._cumulate(true); // be sure cumns are exact\n    var bound = this.bound_mean(x);\n    var lower = bound[0], upper = bound[1];\n    if (this.discrete) {\n        return lower.cumn / this.n;\n    } else {\n        var cumn = lower.mean_cumn;\n        if (lower !== upper) {\n            cumn += (x - lower.mean) * (upper.mean_cumn - lower.mean_cumn) / (upper.mean - lower.mean);\n        }\n        return cumn / this.n;\n    }\n};\n\nTDigest.prototype.bound_mean_cumn = function(cumn) {\n    // find centroids lower and upper such that lower.mean_cumn < x <\n    // upper.mean_cumn or lower.mean_cumn === x === upper.mean_cumn. Don't call\n    // this for cumn out of bounds.\n    //\n    // XXX because mean and mean_cumn give rise to the same sort order\n    // (up to identical means), use the mean rbtree for our search.\n    this.centroids._comparator = compare_centroid_mean_cumns;\n    var iter = this.centroids.upperBound({mean_cumn:cumn}); // cumn < iter\n    this.centroids._comparator = compare_centroid_means;\n    var lower = iter.prev();      // lower <= cumn\n    var upper = (lower && lower.mean_cumn === cumn) ? lower : iter.next();\n    return [lower, upper];\n};\n\nTDigest.prototype.percentile = function(p_or_plist) {\n    // for percentage p (0..1), or for each p in a list of ps, return\n    // the smallest data value q at which at least p percent of the\n    // observations <= q.\n    //\n    // for discrete distributions, this selects q using the Nearest\n    // Rank Method\n    // (https://en.wikipedia.org/wiki/Percentile#The_Nearest_Rank_method)\n    // (in scipy, same as percentile(...., interpolation='higher')\n    //\n    // for continuous distributions, interpolates data values between\n    // count-weighted bracketing means.\n    //\n    // this triggers cumulate() if cumn's are out of date.\n    //\n    var ps = Array.isArray(p_or_plist) ? p_or_plist : [p_or_plist];\n    var qs = ps.map(this._percentile, this);\n    return Array.isArray(p_or_plist) ? qs : qs[0];\n};\n\nTDigest.prototype._percentile = function(p) {\n    if (this.size() === 0) {\n        return undefined;\n    }\n    this._cumulate(true); // be sure cumns are exact\n    var min = this.centroids.min();\n    var max = this.centroids.max();\n    var h = this.n * p;\n    var bound = this.bound_mean_cumn(h);\n    var lower = bound[0], upper = bound[1];\n\n    if (upper === lower || lower === null || upper === null) {\n        return (lower || upper).mean;\n    } else if (!this.discrete) {\n        return lower.mean + (h - lower.mean_cumn) * (upper.mean - lower.mean) / (upper.mean_cumn - lower.mean_cumn);\n    } else if (h <= lower.cumn) {\n        return lower.mean;\n    } else {\n        return upper.mean;\n    }\n};\n\nfunction pop_random(choices) {\n    // remove and return an item randomly chosen from the array of choices\n    // (mutates choices)\n    //\n    var idx = Math.floor(Math.random() * choices.length);\n    return choices.splice(idx, 1)[0];\n}\n\nTDigest.prototype.compress = function() {\n    // TDigests experience worst case compression (none) when input\n    // increases monotonically.  Improve on any bad luck by\n    // reconsuming digest centroids as if they were weighted points\n    // while shuffling their order (and hope for the best).\n    //\n    if (this.compressing) {\n        return;\n    }\n    var points = this.toArray();\n    this.reset();\n    this.compressing = true;\n    while (points.length > 0) {\n        this.push_centroid(pop_random(points));\n    }\n    this._cumulate(true);\n    this.compressing = false;\n};\n\nfunction Digest(config) {\n    // allocate a distribution digest structure. This is an extension\n    // of a TDigest structure that starts in exact histogram (discrete)\n    // mode, and automatically switches to TDigest mode for large\n    // samples that appear to be from a continuous distribution.\n    //\n    this.config = config || {};\n    this.mode = this.config.mode || 'auto'; // disc, cont, auto\n    TDigest.call(this, this.mode === 'cont' ? config.delta : false);\n    this.digest_ratio = this.config.ratio || 0.9;\n    this.digest_thresh = this.config.thresh || 1000;\n    this.n_unique = 0;\n}\nDigest.prototype = Object.create(TDigest.prototype);\nDigest.prototype.constructor = Digest;\n\nDigest.prototype.push = function(x_or_xlist) {\n    TDigest.prototype.push.call(this, x_or_xlist);\n    this.check_continuous();\n};\n\nDigest.prototype._new_centroid = function(x, n, cumn) {\n    this.n_unique += 1;\n    TDigest.prototype._new_centroid.call(this, x, n, cumn);\n};\n\nDigest.prototype._addweight = function(nearest, x, n) {\n    if (nearest.n === 1) {\n        this.n_unique -= 1;\n    }\n    TDigest.prototype._addweight.call(this, nearest, x, n);\n};\n\nDigest.prototype.check_continuous = function() {\n    // while in 'auto' mode, if there are many unique elements, assume\n    // they are from a continuous distribution and switch to 'cont'\n    // mode (tdigest behavior). Return true on transition from\n    // disctete to continuous.\n    if (this.mode !== 'auto' || this.size() < this.digest_thresh) {\n        return false;\n    }\n    if (this.n_unique / this.size() > this.digest_ratio) {\n        this.mode = 'cont';\n        this.discrete = false;\n        this.delta = this.config.delta || 0.01;\n        this.compress();\n        return true;\n    }\n    return false;\n};\n\nmodule.exports = {\n    'TDigest': TDigest,\n    'Digest': Digest\n};\n","const client = require('prom-client')\n\n//\n// Main function should be imported and wrapped with the function handleSummary\n//\nfunction sendMetricsToPromGateway(data, opts = {}) {\n    // Default options\n    if (!opts.host) {\n        throw new Error(\"Please provide the host for the prometheus push-gateway\")\n    }\n    let gateway = new client.Pushgateway(opts.host);\n\n    if (!opts.job) {\n      opts.job = \"k6_tests_job\"\n    }\n\n    console.log(\"Computing test summary metrics...\")\n\n    for (let metric in data) {\n        if (metric.includes('{')){\n            continue;\n        }\n        var metricObj = data[metric];\n        let metricType = metricObj['type'];\n        let metricValues = metricObj['values'];\n        let promMetric;\n        switch (metricType) {\n            case 'trend':\n                promMetric = createGauge(client, metric, ['quantile'])\n                for (const [key, value] of Object.entries(metricValues)) {\n                    promMetric.set({ quantile: key }, value)\n                }\n                break;\n            case 'gauge':\n                promMetric = createGauge(client, metric, [])\n                for (const [key, value] of Object.entries(metricValues)) {\n                    if (key === 'value') {\n                        promMetric.set(value)\n                    }\n                }\n                break;\n            case 'counter':\n                promMetric = createGauge(client, metric, ['rate'])\n                for (const [key, value] of Object.entries(metricValues)) {\n                    if (key === 'count') {\n                        promMetric.set(value);\n                    }\n                    else{\n                        promMetric.set({ rate: 'seconds' }, value);\n                    }\n                }\n                break;\n            case 'rate':\n                promMetric = createGauge(client, metric, [])\n                for (const [key, value] of Object.entries(metricValues)) {\n                    if (key === 'rate') {\n                        promMetric.set(value)\n                    }\n                }\n                break;\n            default:\n                console.log(`Unsupported metric type: ${metricType}.`);\n        }\n    }\n    sendMetrics(gateway, opts.job)\n}\n\nfunction createGauge(promClient, metricName, labelNames){\n    const gauge = new promClient.Gauge({\n        name: metricName,\n        help: getMetricHelp(metricName),\n        labelNames: labelNames\n    });\n    return gauge;\n}\n\nfunction sendMetrics(gateway, jobName){\n    console.log(\"Sending test metrics to the Prometheus Pushgateway\")\n\n    gateway.pushAdd({ jobName: jobName })\n    .then(({ resp, body }) => {\n        console.log(`PushGate Response: ${body}`);\n        console.log(`PushGate Response status: ${resp.statusCode}`);\n    })\n    .catch(err => {\n        console.log(`Error when sending metrics to the pushgateway: ${err}`);\n    });  \n}\n\nfunction getMetricHelp(metricName){\n    return builtinMetrics[metricName.split('{')[0]]\n}\n\nlet builtinMetrics = {\n    \"vus\":                \"Current number of active virtual users\",\n    \"vus_max\":            \"Max possible number of virtual users\",\n    \"iterations\":         \"The aggregate number of times the VUs in the test have executed\",\n    \"iteration_duration\": \"The time it took to complete one full iteration\",\n    \"dropped_iterations\": \"The number of iterations that could not be started\",\n    \"data_received\":      \"The amount of received data\",\n    \"data_sent\":          \"The amount of data sent\",\n    \"checks\":             \"The rate of successful checks\",\n\n    \"http_reqs\":                \"How many HTTP requests has k6 generated, in total\",\n    \"http_req_blocked\":         \"Time spent blocked  before initiating the request\",\n    \"http_req_connecting\":      \"Time spent establishing TCP connection\",\n    \"http_req_tls_handshaking\": \"Time spent handshaking TLS session\",\n    \"http_req_sending\":         \"Time spent sending data\",\n    \"http_req_waiting\":         \"Time spent waiting for response\",\n    \"http_req_receiving\":       \"Time spent receiving response data\",\n    \"http_req_duration\":        \"Total time for the request\",\n    \"http_req_failed\":          \"The rate of failed requests\",\n}\n\nmodule.exports=sendMetricsToPromGateway;","module.exports = require(\"cluster\");","module.exports = require(\"fs\");","module.exports = require(\"http\");","module.exports = require(\"https\");","module.exports = require(\"perf_hooks\");","module.exports = require(\"process\");","module.exports = require(\"url\");","module.exports = require(\"util\");","module.exports = require(\"v8\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(943);\n"],"names":["module","exports","RBTree","require","BinTree","TreeBase","Node","data","this","left","right","comparator","_root","_comparator","size","prototype","get_child","dir","set_child","val","insert","p","node","ret","remove","head","undefined","found","cmp","red","is_red","single_rotate","root","save","double_rotate","last","gp","ggp","dir2","sr","sibling","gpc","Iterator","tree","_tree","_ancestors","_cursor","clear","find","res","c","findIter","iter","iterator","push","lowerBound","item","cur","i","length","upperBound","next","min","max","each","cb","it","reach","prev","_minNode","pop","_maxNode","start","register","Registry","contentType","validateMetricName","Counter","Gauge","Histogram","Summary","Pushgateway","linearBuckets","exponentialBuckets","collectDefaultMetrics","aggregators","AggregatorRegistry","width","count","Error","buckets","Array","factor","Grouper","cluster","GET_METRICS_REQ","GET_METRICS_RES","registries","globalRegistry","requestCtr","listenersAdded","requests","Map","constructor","super","isMaster","on","worker","message","type","request","get","requestId","error","done","metrics","forEach","registry","responses","pending","delete","clearTimeout","errorTimeout","promString","aggregate","isWorker","process","Promise","all","map","r","getMetricsAsJSON","then","send","catch","clusterMetrics","resolve","reject","settled","err","result","setTimeout","set","id","workers","isConnected","nextTick","metricsArr","aggregatedRegistry","metricsByName","metric","add","name","aggregatorName","aggregator","aggregatorFn","aggregatedMetric","aggregatedMetricWrapper","Object","assign","registerMetric","regs","isArray","reg","TypeError","util","hashObject","isObject","getLabels","removeLabels","validateLabel","Metric","setValue","hashMap","value","labels","hash","inc","labelNames","Number","isFinite","format","reset","collect","v","help","values","args","bind","call","processCpuTotal","processStartTime","osMemoryHeap","processOpenFileDescriptors","processMaxFileDescriptors","eventLoopLag","processHandles","processRequests","heapSizeAndUsed","heapSpacesSizeAndUsed","version","gc","metricsList","keys","config","eventLoopMonitoringPrecision","gauge","getLabelArg","getValueArg","_getValue","dec","setToCurrentTime","now","Date","startTimer","hrtime","endLabels","delta","startLabels","observe","setValuePair","metricName","labelValuePair","convertLabelsAndValues","valueFromMap","createBaseValues","bucketValues","b","upperBounds","bound","findBound","sum","hasOwnProperty","label","reduce","acc","freeze","histogram","bucketData","bucketLabelNames","lbls","le","labelName","d","infLabel","addSumAndCountForExport","zero","validateLabelName","defaults","registers","AggregatorFactory","byLabels","key","valObj","first","omit","average","Math","Infinity","perf_hooks","NODEJS_EVENTLOOP_LAG","NODEJS_EVENTLOOP_LAG_MIN","NODEJS_EVENTLOOP_LAG_MAX","NODEJS_EVENTLOOP_LAG_MEAN","NODEJS_EVENTLOOP_LAG_STDDEV","NODEJS_EVENTLOOP_LAG_P50","NODEJS_EVENTLOOP_LAG_P90","NODEJS_EVENTLOOP_LAG_P99","reportEventloopLag","seconds","namePrefix","prefix","monitorEventLoopDelay","resolution","enable","setImmediate","lag","lagMin","lagMax","lagMean","mean","lagStddev","stddev","lagP50","percentile","lagP90","lagP99","metricNames","NODEJS_GC_DURATION_SECONDS","DEFAULT_GC_DURATION_BUCKETS","kinds","constants","NODE_PERFORMANCE_GC_MAJOR","NODE_PERFORMANCE_GC_MINOR","NODE_PERFORMANCE_GC_INCREMENTAL","NODE_PERFORMANCE_GC_WEAKCB","gcDurationBuckets","gcHistogram","PerformanceObserver","list","entry","getEntries","kind","detail","duration","entryTypes","safeMemoryUsage","NODEJS_HEAP_SIZE_TOTAL","NODEJS_HEAP_SIZE_USED","NODEJS_EXTERNAL_MEMORY","memoryUsage","heapSizeTotal","memUsage","heapTotal","heapSizeUsed","heapUsed","external","externalMemUsed","v8","METRICS","NODEJS_HEAP_SIZE","metricType","gauges","total","space","getHeapSpaceStatistics","spaceName","space_name","substr","indexOf","space_size","used","space_used_size","available","space_available_size","aggregateByObjectName","listElement","updateMetrics","linuxVariant","PROCESS_RESIDENT_MEMORY","platform","rss","notLinuxVariant","fs","PROCESS_VIRTUAL_MEMORY","PROCESS_HEAP","residentMemGauge","structuredOutput","input","returnValue","split","filter","s","some","string","trim","structureOutput","readFileSync","VmRSS","virtualMemGauge","VmSize","heapSizeMemGauge","VmData","PROCESS_CPU_USER_SECONDS","PROCESS_CPU_SYSTEM_SECONDS","PROCESS_CPU_SECONDS","lastCpuUsage","cpuUsage","cpuUserUsageCounter","userUsageMicros","user","systemUsageMicros","system","cpuSystemUsageCounter","cpuUsageCounter","NODEJS_ACTIVE_HANDLES","NODEJS_ACTIVE_HANDLES_TOTAL","_getActiveHandles","handles","PROCESS_MAX_FDS","maxFds","lines","line","startsWith","parts","PROCESS_OPEN_FDS","fds","readdirSync","NODEJS_ACTIVE_REQUESTS","NODEJS_ACTIVE_REQUESTS_TOTAL","_getActiveRequests","startInSeconds","round","uptime","PROCESS_START_TIME","versionSegments","slice","NODE_VERSION_INFO","url","http","https","async","useGateway","method","job","groupings","gatewayUrlParsed","parse","gatewayUrl","path","pathname","encodeURIComponent","join","generateGroupings","target","requestParams","httpModule","href","search","options","requestOptions","req","resp","body","setEncoding","chunk","write","end","pushAdd","params","jobName","getValueAsString","escapeString","str","replace","escapeLabelValue","_metrics","_collectors","_defaultLabels","getMetricsAsArray","defaultLabelNames","promises","getMetricAsPrometheusString","resolves","removeSingleMetric","getSingleMetricAsString","getSingleMetric","setDefaultLabels","resetMetrics","mergedRegistry","concat","timeWindowQuantiles","summaryOfLabel","td","maxAgeSeconds","ageBuckets","compressCount","compress","percentiles","summaryOfLabels","percentileValue","quantile","summary","getCountForExport","TDigest","rotate","timeSinceLastRotateMillis","lastRotateTimestampMillis","durationBetweenRotatesMillis","shouldRotate","ringBuffer","currentBuffer","fill","bucket","sort","isNaN","obj","has","metricRegexp","labelRegexp","test","names","every","savedLabels","includes","inspect","K","CX","discrete","centroids","compare_centroid_means","nreset","a","compare_centroid_mean_cumns","mean_cumn","Digest","mode","digest_ratio","ratio","digest_thresh","thresh","n_unique","n","last_cumulate","toArray","everything","_cumulate","x","_digest","push_centroid","exact","cumn","find_nearest","abs","_new_centroid","_addweight","nearest","floor","bound_mean","lower","p_rank","x_or_xlist","ps","_p_rank","upper","bound_mean_cumn","p_or_plist","qs","_percentile","h","compressing","choices","idx","points","random","splice","create","check_continuous","client","createGauge","promClient","getMetricHelp","builtinMetrics","opts","host","gateway","console","log","metricObj","promMetric","metricValues","entries","rate","statusCode","sendMetrics","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"sourceRoot":""}